# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-11-18 07:30+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: emacs-30/java/INSTALL_editable:4
msgid "Installation instructions for Android Copyright (C) 2023-2024 Free Software Foundation, Inc.  See the end of the file for license conditions."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:7
msgid "Please read the entirety of this file before attempting to build Emacs as an application package which can run on Android devices."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:11
msgid "When building from the source repository (as opposed to from a release tarball), make sure to read INSTALL.REPO in the top-level directory as well."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:24
msgid "Android is an unusual operating system in that program binaries cannot be produced on computers running Android themselves.  Instead, they must be built on some other computer using a set of tools known as the ``Android SDK'' (Software Development Kit) and the ``Android NDK'' (Native Development Kit.)  Appropriate versions of both must be obtained to build GNU Emacs; after being built, the generated binaries will work on almost all Android devices.  This document does not elaborate on how both sets of tools can be obtained.  However, for your freedom's sake, you should use the Android SDK provided by the Debian project."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:31
msgid "In addition to the Android SDK and Android NDK, Emacs also requires the Java compiler from OpenJDK 1.7.0 to be installed on your system, along with a working `m4' macro processor.  Building on GNU systems is all that is officially supported.  We are told that Mac OS works too, and other Unix systems will likely work as well, but MS Windows and Cygwin will not."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:34
msgid "Once all of those tools are obtained, you may invoke the `configure' script like so:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:38
#, no-wrap
msgid ""
"  ./configure --with-android=/path/to/android.jar \\\n"
"\t      ANDROID_CC=/path/to/android/ndk/cc  \\\n"
"\t      SDK_BUILD_TOOLS=/path/to/sdk/build/tools\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:40
msgid "Replacing the paths in the command line above with:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:43
#, no-wrap
msgid ""
"  - the path to the `android.jar' headers which come with the Android\n"
"    SDK.  They must correspond to Android version 14 (API level 34).\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:46
#, no-wrap
msgid ""
"  - the path to the C compiler in the Android NDK, for the kind of CPU\n"
"    you are building Emacs to run on.\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:50
#, no-wrap
msgid ""
"  - the path to the directory in the Android SDK containing binaries\n"
"    such as `aapt', `apksigner', and `d8'.  These are used to build\n"
"    the application package.\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:53
msgid "Where the type of CPU can either be `armeabi', `armv7*', `i686', `x86_64', `mips', or `mips64'."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:55
msgid "After the configuration process completes, you may run:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:57
#, no-wrap
msgid "  make all\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:60
msgid "Once `make' finishes, there should be a file in the `java' directory named along the lines of:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:62
#, no-wrap
msgid "  emacs-<version>-<api-version>-<abi>.apk\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:66
msgid "where <api-version> is the oldest version of Android that the package will run on, and <abi> is the type of Android machine the package was built for."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:69
msgid "The generated package can be uploaded onto an SD card (or similar medium) and installed on-device."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:72
msgid "LOCATING NECESSARY FILES"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:78
msgid "As illustrated above, building Emacs for Android requires the presence three separate components of the Android SDK and NDK.  Subsequent to their installation, the contents of the Android development tools are organized into several directories, of which those pertinent to the Emacs compilation process are:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:82
#, no-wrap
msgid ""
"  platforms\n"
"  ndk\n"
"  build-tools\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:87
msgid "The platforms directory contains one subdirectory for each API level whose headers have been installed.  Each of these directories in turn includes the android.jar archive for that version of Android, also necessary for compiling Emacs."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:97
msgid "It is imperative that Emacs is compiled using the headers for the exact API level that it is written for.  This is currently API level 34, so the correct android.jar archive is located within a directory whose name begins with `android-34'.  Minor revisions to the headers are inconsequential towards the Emacs compilation process; if there is a directory named `android-34-extN' (where N represents a revision to the Android SDK), whether you provide `configure' with that directory's android.jar or the android.jar contained within the directory named `android-34' is of no special importance."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:107
msgid "The ndk directory contains one subdirectory for each version of the Android NDK installed.  This directory in turn contains the C and C++ compilation system.  In contrast to the Java headers mentioned within the previous paragraph, the version of the NDK used does not affect Emacs to the extent the version of android.jar does.  Having said that, each version of the NDK only supports a limited range of API levels; your choice of C compiler binary (or __ANDROID_API__) bears upon the earliest version of Android the compiled package will support."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:112
msgid "In most cases, each subdirectory contains a folder named `toolchains', holding an `llvm' directory and one directory for each GCC toolchain supplied by the NDK.  The C compiler is then positioned within `prebuilt/*/bin' inside that directory."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:120
msgid "The build-tools directory holds subdirectories containing the utility programs used to convert class files output by the Java compiler to the DEX format employed by Android.  There is one subdirectory for each version of the build tools, but the version you opt for is not of paramount significance: if your version does not work, configure will protest, so install a newer one.  We anticipate that most recent releases will work, such as those from the 33.0.x and 34.0.x series."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:123
msgid "BUILDING WITH OLD NDK VERSIONS"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:127
msgid "Building Emacs with an old version of the Android NDK requires special setup.\tThis is because there is no separate C compiler binary for each version of Android in those versions of the NDK."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:129
msgid "Before running `configure', you must identify three variables:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:131
#, no-wrap
msgid "  - What kind of Android system you are building Emacs for.\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:133
#, no-wrap
msgid "  - The minimum API version of Android you want to build Emacs for.\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:136
#, no-wrap
msgid ""
"  - The locations of the system root and include files for that\n"
"    version of Android in the NDK.\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:139
msgid "That information must then be specified as arguments to the NDK C compiler.  For example:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:146
#, no-wrap
msgid ""
"  ./configure [...] \\\n"
"     ANDROID_CC=\"i686-linux-android-gcc \\\n"
"\t\t --sysroot=/path/to/ndk/platforms/android-14/arch-x86/\n"
"\t\t -isystem /path/to/ndk/sysroot/usr/include \\\n"
"\t\t -isystem /path/to/ndk/sysroot/usr/include/i686-linux-android \\\n"
"\t\t -D__ANDROID_API__=14\"\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:152
msgid "Where __ANDROID_API__ and the version identifier in \"platforms/android-14\" defines the version of Android you are building for, and the include directories specify the paths to the relevant Android headers.  In addition, it may be necessary to specify \"-gdwarf-2\", due to a bug in the Android NDK."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:155
msgid "Even older versions of the Android SDK do not require the extra `-isystem' directives."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:160
msgid "Emacs is known to run on Android 2.2 (API version 8) or later, with the NDK r10b or later.  We wanted to make Emacs work on even older versions of Android, but they are missing the required JNI graphics library that allows Emacs to display text from C code."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:168
msgid "There is an extremely nasty bug in the Android 2.2 system, the upshot of which is that large files within the generated Emacs package cannot be compressed in builds for Android 2.2, so that the Emacs package will be approximately 15 megabytes larger than a compressed package for a newer version of Android.  For such systems the `zip' utility is also required to produce packages that will not be misinterpreted by the package manager."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:171
msgid "BUILDING C++ DEPENDENCIES"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:175
msgid "In normal circumstances, Emacs should automatically detect and configure one of the C++ standard libraries part of the NDK when such a library is required to build a dependency specified under `--with-ndk-path'."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:183
msgid "Nevertheless, this process is not infallible, and with certain versions of the NDK is liable to fail to locate a C++ compiler, requiring that you run the `make_standalone_toolchain.py' script in the NDK distribution to create a ``standalone toolchain'' and substitute the same for the regular compiler toolchain.  See https://developer.android.com/ndk/guides/standalone_toolchain for further details."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:187
msgid "Some versions of the NDK that ship GCC 4.9.x exhibit a bug where the compiler cannot locate `stddef.h' after being copied to a standalone toolchain.  To work around this problem, add:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:189
#, no-wrap
msgid "   -isystem /path/to/toolchain/include/c++/4.9.x\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:191
msgid "to ANDROID_CFLAGS."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:194
msgid "DEBUG AND RELEASE BUILDS"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:199
msgid "Android makes a distinction between ``debug'' and ``release'' builds of applications.  With ``release'' builds, the system will apply stronger optimizations to the application at the cost of being unable to debug them with the steps in etc/DEBUG."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:201
msgid "Emacs is built as a debuggable package by default, but:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:203
#, no-wrap
msgid "      ./configure --without-android-debug\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:206
msgid "will create a release build of Emacs instead.  This may be useful when running Emacs on resource constrained machines."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:209
msgid "If you are building an Emacs package for redistribution, we urge you to provide both debug and release versions."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:212
msgid "BUILDING WITH A SHARED USER ID"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:218
msgid "Sometimes it may be desirable to build Emacs so that it is able to access executables and application data from another program.  To achieve this, that other program must have a ``shared user ID'', and be signed with the same signing key used to sign Emacs (normally `emacs.keystore'.)"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:221
msgid "Once you have both that signing key and its ``shared user ID'', you can give it to configure:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:223
#, no-wrap
msgid "    ./configure --with-shared-user-id=MY.SHARED.USER.ID\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:225
msgid "For instance,"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:227
#, no-wrap
msgid "    ./configure --with-shared-user-id=com.termux\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:231
msgid "will result in Termux (https://termux.dev)'s application data being accessible to Emacs, within its own application data directory located at `/data/data/com.termux/files'."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:235
msgid "Don't do this if you already have Emacs installed with a different shared user ID, as the system does not allow programs to change their user IDs after being installed."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:238
msgid "BUILDING WITH THIRD PARTY LIBRARIES"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:244
msgid "The Android NDK does not support the usual ways of locating third party libraries, especially not via `pkg-config'.  Instead, it uses its own system called `ndk-build'.  The one exception to this rule is zlib, which is considered a part of the Android OS itself and is available on all devices running Android."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:248
msgid "Android also requires that each application include its own dependencies, as the system makes no guarantee about the existence of any particular library."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:251
msgid "Emacs is not built with the `ndk-build' system.\t Instead, it is built with Autoconf and Make."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:254
msgid "However, it supports building and including dependencies which use the similarly Make-based `ndk-build' system."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:258
msgid "To use dependencies built through `ndk-build', you must specify a list of directories within which Emacs will search for ``Android.mk'' files, like so:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:260
#, no-wrap
msgid "  ./configure \"--with-ndk-path=directory1 directory2\"\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:264
msgid "If `configure' complains about not being able to find ``libc++_shared.so'', then you must locate that file in your copy of the NDK, and specify it like so:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:266
#, no-wrap
msgid "  ./configure --with-ndk-cxx-shared=/path/to/sysroot/libc++_shared.so\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:269
msgid "Emacs will then read the ``Android.mk'' file in each directory, and automatically build and use those modules."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:273
msgid "When building for Intel systems, some ``ndk-build'' modules require the Netwide Assembler, usually installed under ``nasm'', to be present on the system that is building Emacs."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:279
msgid "Google has adapted several Emacs dependencies to use the `ndk-build' system, many of which require patches to function under an Emacs environment.  As such, it is generally the wiser choice to use our ports in their place, but the following list and patches are still provided for reference."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:306
#, no-wrap
msgid ""
"  libpng\t- https://android.googlesource.com/platform/external/libpng\n"
"  giflib\t- https://android.googlesource.com/platform/external/giflib\n"
"     (You must add LOCAL_EXPORT_CFLAGS := -I$(LOCAL_PATH) before\n"
"      its Android.mk includes $(BUILD_STATIC_LIBRARY))\n"
"  libjpeg-turbo - https://android.googlesource.com/platform/external/libjpeg-turbo\n"
"     (You must add LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH) before\n"
"      its Android.mk includes $(BUILD_SHARED_LIBRARY))\n"
"  libxml2\t- https://android.googlesource.com/platform/external/libxml2/\n"
"     (You must also place the dependency icu4c in ``--with-ndk-path'',\n"
"      and apply the patch at the end of this file.)\n"
"  icu4c\t\t- https://android.googlesource.com/platform/external/icu/\n"
"     (You must apply the patch at the end of this file.)\n"
"  sqlite3\t- https://android.googlesource.com/platform/external/sqlite/\n"
"     (You must apply the patch at the end of this file, and add the `dist'\n"
"      directory to ``--with-ndk-path''.)\n"
"  libselinux\t- https://android.googlesource.com/platform/external/libselinux\n"
"     (You must apply the patches at the end of the file, and obtain\n"
"      the following three dependencies.)\n"
"  libpackagelistparser\n"
"    https://android.googlesource.com/platform/system/core/+/refs/heads/nougat-mr1-dev/libpackagelistparser/\n"
"    (You must add LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)/include before\n"
"      its Android.mk includes $(BUILD_SHARED_LIBRARY))\n"
"  libpcre\t- https://android.googlesource.com/platform/external/pcre\n"
"  libcrypto\t- https://android.googlesource.com/platform/external/boringssl\n"
"     (You must apply the patch at the end of this file when building for\n"
"      ARM systems.)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:311
msgid "Many of these dependencies have been migrated over to the ``Android.bp'' build system now used to build Android itself.  However, the old ``Android.mk'' Makefiles are still present in older branches, and can be easily adapted to newer versions."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:314
msgid "In addition, some Emacs dependencies provide `ndk-build' support themselves:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:318
#, no-wrap
msgid ""
"  libwebp\t- https://android.googlesource.com/platform/external/webp\n"
"     (You must apply the patch at the end of this file for the resulting\n"
"      binary to work on armv7 devices.)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:321
msgid "Emacs developers have ported the following dependencies to ARM Android systems:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:339
#, no-wrap
msgid ""
"  gnutls, gmp\t- https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"    (Please see the section GNUTLS near the end of this file.)\n"
"  libtiff    \t- https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"    (Extract and point ``--with-ndk-path'' to tiff-4.5.0-emacs.tar.gz.)\n"
"  tree-sitter\t- https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"    (Please see the section TREE-SITTER near the end of this file.)\n"
"  harfbuzz  \t- https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"    (Please see the section HARFBUZZ near the end of this file.)\n"
"  libxml2       - https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"    (Please see the section LIBXML2 near the end of this file.)\n"
"  libjpeg-turbo - https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"  giflib        - https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"  libtiff       - https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"  libpng        - https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"    (Please see the section IMAGE LIBRARIES near the end of this file.)\n"
"  libselinux - https://sourceforge.net/projects/android-ports-for-gnu-emacs\n"
"    (Please see the section SELINUX near the end of this file.)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:342
msgid "And other developers have ported the following dependencies to Android systems:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:345
#, no-wrap
msgid ""
"  ImageMagick, lcms2 - https://github.com/MolotovCherry/Android-ImageMagick7\n"
"    (Please see the section IMAGEMAGICK near the end of this file.)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:349
msgid "We anticipate that most untested non-trivial ndk-build dependencies will need adjustments in Emacs to work, as the Emacs build system which emulates ndk-build is in an extremely early state."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:352
msgid "GNUTLS"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:356
msgid "Modified copies of GnuTLS and its dependencies (such as libgmp, libtasn1, p11-kit) which can be built with the ndk-build system can be found at https://sourceforge.net/projects/android-ports-for-gnu-emacs."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:361
msgid "They have only been tested on arm64 Android systems running Android 5.0 or later, and armv7l systems running Android 13 or later, so your mileage may vary, especially if you are trying to build Emacs for another kind of machine."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:364
msgid "To build Emacs with GnuTLS, you must unpack each of the following tar archives in that site:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:371
#, no-wrap
msgid ""
"  gmp-6.2.1-emacs.tgz\n"
"  gnutls-3.8.5-emacs.tar.gz\n"
"    (or gnutls-3.8.5-emacs-armv7a.tar.gz on 32-bit systems)\n"
"  libtasn1-4.19.0-emacs.tar.gz\n"
"  p11-kit-0.24.1-emacs.tar.gz\n"
"  nettle-3.8-emacs.tar.gz\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:375
msgid "and add the resulting folders to ``--with-ndk-path''.  Do not attempt to build these packages separately by means of `configure' scripts or Makefiles inside."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:378
msgid "LIBXML2"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:381
msgid "A copy of libxml2 adapted for the same build system is provided under the name:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:383
#, no-wrap
msgid "  libxml2-2.12.4-emacs.tar.gz\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:387
msgid "In contrast to the version distributed by Google, internationalization is disabled, which eliminates the dependency on icu4c (and by extension a C++ compiler)."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:390
msgid "IMAGE LIBRARIES"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:393
msgid "ndk-build enabled versions of image libraries required by Emacs are also provided as:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:398
#, no-wrap
msgid ""
"  giflib-5.2.1-emacs.tar.gz\n"
"  libjpeg-turbo-3.0.2-emacs.tar.gz\n"
"  libpng-1.6.41-emacs.tar.gz\n"
"  tiff-4.5.1-emacs.tar.gz\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:403
msgid "Of which all but libjpeg-turbo-3.0.2-emacs.tar.gz should compile on every supported Android system and toolchain; where the latter does not compile, i.e. old armeabi toolchains, Google's version is a suitable substitute."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:407
msgid "Of the three remaining image-related dependencies, libwebp provides upstream support for ndk-build, ImageMagick has been ported by interested third-party developers, and librsvg is addressed below."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:410
msgid "LIBRSVG"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:413
msgid "Librsvg 2.40.21, the final release in the librsvg 2.40.x series, the last to be implemented in C, is provided as:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:415
#, no-wrap
msgid "  librsvg-2.40.21-emacs.tar.gz\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:420
msgid "and has been lightly edited for compatibility with environments where Pango cannot provide fonts, with the obvious caveat that text cannot be displayed with the resulting librsvg binary.  Among numerous dependencies are PCRE, and:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:434
#, no-wrap
msgid ""
"  libiconv-1.17-emacs.tar.gz\n"
"  libffi-3.4.5-emacs.tar.gz\n"
"  pango-1.38.1-emacs.tar.gz\n"
"  glib-2.33.14-emacs.tar.gz\n"
"  libcroco-0.6.13-emacs.tar.gz\n"
"  pixman-0.38.4-emacs.tar.gz\n"
"  libxml2-2.12.4-emacs.tar.gz\n"
"  gdk-pixbuf-2.22.1-emacs.tar.gz\n"
"  giflib-5.2.1-emacs.tar.gz\n"
"  libjpeg-turbo-3.0.2-emacs.tar.gz\n"
"  libpng-1.6.41-emacs.tar.gz\n"
"  tiff-4.5.1-emacs.tar.gz\n"
"  cairo-1.16.0-emacs.tar.gz\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:441
msgid "which must be individually unpacked and their contents provided on the command line, as with other dependencies.  They will introduce approximately 8 MiB's worth of shared libraries into the finished application package.  It is unlikely that later releases of librsvg will ever be ported, as they have migrated to a different implementation language."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:446
msgid "No effort has been expended on providing the latest and greatest of these dependencies either; rather, the versions chosen are often the earliest versions required by their dependents, these being the smaller of all available versions, and generally more straightforward to port."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:449
msgid "SELINUX"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:451
msgid "The upstream version of libselinux is available as:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:453
#, no-wrap
msgid "  libselinux-3.6-emacs.tar.gz\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:459
msgid "and compiles on toolchains configured for Android 4.3 and later, which are the earliest Android releases to support SELinux.  Its principal advantage over Google's edition is the absence of Android-specific modifications that create dependencies on libpackagelistparser and libcrypto; Google's pcre remains a requirement."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:462
msgid "TREE-SITTER"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:466
msgid "A copy of tree-sitter modified to build with the ndk-build system can also be found that URL.  To build Emacs with tree-sitter, you must unpack the following tar archive in that site:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:468
#, no-wrap
msgid "  tree-sitter-0.20.7-emacs.tar.gz\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:470 emacs-30/java/INSTALL_editable:483
msgid "and add the resulting folder to ``--with-ndk-build''."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:473
msgid "HARFBUZZ"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:477
msgid "A copy of HarfBuzz modified to build with the ndk-build system can also be found at that URL.  To build Emacs with HarfBuzz, you must unpack the following tar archive in that site:"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:481
#, no-wrap
msgid ""
"  harfbuzz-7.1.0-emacs.tar.gz (when building for Android >4.3\n"
"  \t\t\t       with 21.0.x or later of the NDK)\n"
"  harfbuzz-1.7.7.tar.gz\t      (earlier NDK or platform releases)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:486
msgid "IMAGEMAGICK"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:492
msgid "There is a third party port of ImageMagick to Android.  Unfortunately, the port also uses its own patched versions of libpng, libjpeg, libtiff and libwebp, which conflict with those used by Emacs.  Its Makefiles were also written for MS Windows, so you must also apply the patch at the end of this file."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:496
msgid "PATCH FOR LIBXML2"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:500
msgid "This patch must be applied to the Android.mk in Google's version of libxml2 before it can be built for Emacs.  In addition, you must also revert the commit `edb5870767fed8712a9b77ef34097209b61ab2db'."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:511
#, no-wrap
msgid ""
"diff --git a/Android.mk b/Android.mk\n"
"index 07c7b372..2494274f 100644\n"
"--- a/Android.mk\n"
"+++ b/Android.mk\n"
"@@ -80,6 +80,7 @@ LOCAL_SHARED_LIBRARIES := libicuuc\n"
" LOCAL_MODULE:= libxml2\n"
" LOCAL_CLANG := true\n"
" LOCAL_ADDITIONAL_DEPENDENCIES += $(LOCAL_PATH)/Android.mk\n"
"+LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)/include\n"
" include $(BUILD_SHARED_LIBRARY)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:519
#, no-wrap
msgid ""
" # For the host\n"
"@@ -94,3 +95,5 @@ LOCAL_MODULE := libxml2\n"
" LOCAL_CLANG := true\n"
" LOCAL_ADDITIONAL_DEPENDENCIES += $(LOCAL_PATH)/Android.mk\n"
" include $(BUILD_HOST_STATIC_LIBRARY)\n"
"+\n"
"+$(call import-module,libicuuc)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:521
msgid "PATCH FOR ICU"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:524
msgid "This patch must be applied to icu4j/Android.mk in Google's version of icu before it can be built for Emacs."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:535
#, no-wrap
msgid ""
"diff --git a/icu4j/Android.mk b/icu4j/Android.mk\n"
"index d1ab3d5..69eff81 100644\n"
"--- a/icu4j/Android.mk\n"
"+++ b/icu4j/Android.mk\n"
"@@ -69,7 +69,7 @@ include $(BUILD_STATIC_JAVA_LIBRARY)\n"
" # Path to the ICU4C data files in the Android device file system:\n"
" icu4c_data := /system/usr/icu\n"
" icu4j_config_root := $(LOCAL_PATH)/main/classes/core/src\n"
"-include external/icu/icu4j/adjust_icudt_path.mk\n"
"+include $(LOCAL_PATH)/adjust_icudt_path.mk\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:538
#, no-wrap
msgid ""
" include $(CLEAR_VARS)\n"
" LOCAL_SRC_FILES := $(icu4j_src_files)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:552
#, no-wrap
msgid ""
"diff --git a/icu4c/source/common/Android.mk b/icu4c/source/common/Android.mk\n"
"index 8e5f757..44bb130 100644\n"
"--- a/icu4c/source/common/Android.mk\n"
"+++ b/icu4c/source/common/Android.mk\n"
"@@ -231,7 +231,7 @@ include $(CLEAR_VARS)\n"
" LOCAL_SRC_FILES += $(src_files)\n"
" LOCAL_C_INCLUDES += $(c_includes) $(optional_android_logging_includes)\n"
" LOCAL_CFLAGS += $(local_cflags) -DPIC -fPIC\n"
"-LOCAL_SHARED_LIBRARIES += libdl $(optional_android_logging_libraries)\n"
"+LOCAL_SHARED_LIBRARIES += libdl libstdc++ $(optional_android_logging_libraries)\n"
" LOCAL_MODULE_TAGS := optional\n"
" LOCAL_MODULE := libicuuc\n"
" LOCAL_RTTI_FLAG := -frtti\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:554
msgid "PATCH FOR SQLITE3"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:567
#, no-wrap
msgid ""
"diff --git a/dist/Android.mk b/dist/Android.mk\n"
"index bf277d2..36734d9 100644\n"
"--- a/dist/Android.mk\n"
"+++ b/dist/Android.mk\n"
"@@ -141,6 +141,7 @@ include $(BUILD_HOST_EXECUTABLE)\n"
" include $(CLEAR_VARS)\n"
" LOCAL_SRC_FILES := $(common_src_files)\n"
" LOCAL_CFLAGS += $(minimal_sqlite_flags)\n"
"+LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)\n"
" LOCAL_MODULE:= libsqlite_static_minimal\n"
" LOCAL_SDK_VERSION := 23\n"
" include $(BUILD_STATIC_LIBRARY)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:579
#, no-wrap
msgid ""
"diff --git a/dist/sqlite3.c b/dist/sqlite3.c\n"
"index b0536a4..8fa1ee9 100644\n"
"--- a/dist/sqlite3.c\n"
"+++ b/dist/sqlite3.c\n"
"@@ -26474,7 +26474,7 @@ SQLITE_PRIVATE const char *sqlite3OpcodeName(int i){\n"
" */\n"
" #if !defined(HAVE_POSIX_FALLOCATE) \\\n"
"       && (_XOPEN_SOURCE >= 600 || _POSIX_C_SOURCE >= 200112L)\n"
"-# define HAVE_POSIX_FALLOCATE 1\n"
"+/* # define HAVE_POSIX_FALLOCATE 1 */\n"
" #endif\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:581
#, no-wrap
msgid " /*\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:583
msgid "PATCH FOR WEBP"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:602
#, no-wrap
msgid ""
"diff --git a/Android.mk b/Android.mk\n"
"index c7bcb0f5..d4da1704 100644\n"
"--- a/Android.mk\n"
"+++ b/Android.mk\n"
"@@ -28,9 +28,10 @@ ifneq ($(findstring armeabi-v7a, $(TARGET_ARCH_ABI)),)\n"
"   # Setting LOCAL_ARM_NEON will enable -mfpu=neon which may cause illegal\n"
"   # instructions to be generated for armv7a code. Instead target the neon code\n"
"   # specifically.\n"
"-  NEON := c.neon\n"
"-  USE_CPUFEATURES := yes\n"
"-  WEBP_CFLAGS += -DHAVE_CPU_FEATURES_H\n"
"+  # NEON := c.neon\n"
"+  # USE_CPUFEATURES := yes\n"
"+  # WEBP_CFLAGS += -DHAVE_CPU_FEATURES_H\n"
"+  NEON := c\n"
" else\n"
"   NEON := c\n"
" endif\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:604
msgid "PATCHES FOR SELINUX"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:617
#, no-wrap
msgid ""
"diff --git a/Android.mk b/Android.mk\n"
"index 659232e..1e64fd6 100644\n"
"--- a/Android.mk\n"
"+++ b/Android.mk\n"
"@@ -116,3 +116,7 @@ LOCAL_STATIC_LIBRARIES := libselinux\n"
" LOCAL_WHOLE_STATIC_LIBRARIES := libpcre\n"
" LOCAL_C_INCLUDES := external/pcre\n"
" include $(BUILD_HOST_EXECUTABLE)\n"
"+\n"
"+$(call import-module,libpcre)\n"
"+$(call import-module,libpackagelistparser)\n"
"+$(call import-module,libcrypto)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:635
#, no-wrap
msgid ""
"diff --git a/src/android.c b/src/android.c\n"
"index 5206a9f..b351ffc 100644\n"
"--- a/src/android.c\n"
"+++ b/src/android.c\n"
"@@ -21,8 +21,7 @@\n"
" #include <selinux/label.h>\n"
" #include <selinux/avc.h>\n"
" #include <openssl/sha.h>\n"
"-#include <private/android_filesystem_config.h>\n"
"-#include <log/log.h>\n"
"+#include <android/log.h>\n"
" #include \"policy.h\"\n"
" #include \"callbacks.h\"\n"
" #include \"selinux_internal.h\"\n"
"@@ -686,6 +685,7 @@ static int seapp_context_lookup(enum seapp_kind kind,\n"
" \t\tseinfo = parsedseinfo;\n"
" \t}\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:651
#, no-wrap
msgid ""
"+#if 0\n"
" \tuserid = uid / AID_USER;\n"
" \tisOwner = (userid == 0);\n"
" \tappid = uid % AID_USER;\n"
"@@ -702,9 +702,13 @@ static int seapp_context_lookup(enum seapp_kind kind,\n"
" \t\tusername = \"_app\";\n"
" \t\tappid -= AID_APP;\n"
" \t} else {\n"
"+#endif\n"
" \t\tusername = \"_isolated\";\n"
"+\t\tappid = 0;\n"
"+#if 0\n"
" \t\tappid -= AID_ISOLATED_START;\n"
" \t}\n"
"+#endif\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:655
#, no-wrap
msgid ""
" \tif (appid >= CAT_MAPPING_MAX_ID || userid >= CAT_MAPPING_MAX_ID)\n"
" \t\tgoto err;\n"
"@@ -1662,8 +1666,10 @@ int selinux_log_callback(int type, const char *fmt, ...)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:665
#, no-wrap
msgid ""
"     va_start(ap, fmt);\n"
"     if (vasprintf(&strp, fmt, ap) != -1) {\n"
"+#if 0\n"
"         LOG_PRI(priority, \"SELinux\", \"%s\", strp);\n"
"         LOG_EVENT_STRING(AUDITD_LOG_TAG, strp);\n"
"+#endif\n"
"         free(strp);\n"
"     }\n"
"     va_end(ap);\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:667
msgid "PATCH FOR BORINGSSL"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:689
#, no-wrap
msgid ""
"diff --git a/Android.mk b/Android.mk\n"
"index 3e3ef2a..277d4a9 100644\n"
"--- a/Android.mk\n"
"+++ b/Android.mk\n"
"@@ -27,7 +27,9 @@ LOCAL_MODULE := libcrypto\n"
" LOCAL_EXPORT_C_INCLUDE_DIRS := $(LOCAL_PATH)/src/include\n"
" LOCAL_ADDITIONAL_DEPENDENCIES := $(LOCAL_PATH)/Android.mk $(LOCAL_PATH)/crypto-sources.mk\n"
" LOCAL_CFLAGS += -fvisibility=hidden -DBORINGSSL_SHARED_LIBRARY -DBORINGSSL_IMPLEMENTATION -DOPENSSL_SMALL -Wno-unused-parameter\n"
"+LOCAL_CFLAGS_arm = -DOPENSSL_STATIC_ARMCAP -DOPENSSL_NO_ASM\n"
" LOCAL_SDK_VERSION := 9\n"
"+LOCAL_LDFLAGS = --no-undefined\n"
" # sha256-armv4.S does not compile with clang.\n"
" LOCAL_CLANG_ASFLAGS_arm += -no-integrated-as\n"
" LOCAL_CLANG_ASFLAGS_arm64 += -march=armv8-a+crypto\n"
"diff --git a/sources.mk b/sources.mk\n"
"index e82f3d5..be3a3c4 100644\n"
"--- a/sources.mk\n"
"+++ b/sources.mk\n"
"@@ -337,20 +337,20 @@ linux_aarch64_sources := \\\n"
"   linux-aarch64/crypto/sha/sha256-armv8.S\\\n"
"   linux-aarch64/crypto/sha/sha512-armv8.S\\\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:718
#, no-wrap
msgid ""
"-linux_arm_sources := \\\n"
"-  linux-arm/crypto/aes/aes-armv4.S\\\n"
"-  linux-arm/crypto/aes/aesv8-armx32.S\\\n"
"-  linux-arm/crypto/aes/bsaes-armv7.S\\\n"
"-  linux-arm/crypto/bn/armv4-mont.S\\\n"
"-  linux-arm/crypto/modes/ghash-armv4.S\\\n"
"-  linux-arm/crypto/modes/ghashv8-armx32.S\\\n"
"-  linux-arm/crypto/sha/sha1-armv4-large.S\\\n"
"-  linux-arm/crypto/sha/sha256-armv4.S\\\n"
"-  linux-arm/crypto/sha/sha512-armv4.S\\\n"
"-  src/crypto/chacha/chacha_vec_arm.S\\\n"
"-  src/crypto/cpu-arm-asm.S\\\n"
"-  src/crypto/curve25519/asm/x25519-asm-arm.S\\\n"
"-  src/crypto/poly1305/poly1305_arm_asm.S\\\n"
"+# linux_arm_sources := \\\n"
"+#   linux-arm/crypto/aes/aes-armv4.S\\\n"
"+#   linux-arm/crypto/aes/aesv8-armx32.S\\\n"
"+#   linux-arm/crypto/aes/bsaes-armv7.S\\\n"
"+#   linux-arm/crypto/bn/armv4-mont.S\\\n"
"+#   linux-arm/crypto/modes/ghash-armv4.S\\\n"
"+#   linux-arm/crypto/modes/ghashv8-armx32.S\\\n"
"+#   linux-arm/crypto/sha/sha1-armv4-large.S\\\n"
"+#   linux-arm/crypto/sha/sha256-armv4.S\\\n"
"+#   linux-arm/crypto/sha/sha512-armv4.S\\\n"
"+#   src/crypto/chacha/chacha_vec_arm.S\\\n"
"+#   src/crypto/cpu-arm-asm.S\\\n"
"+#   src/crypto/curve25519/asm/x25519-asm-arm.S\\\n"
"+#   src/crypto/poly1305/poly1305_arm_asm.S\\\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:721
#, no-wrap
msgid ""
" linux_x86_sources := \\\n"
"   linux-x86/crypto/aes/aes-586.S\\\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:723
msgid "PATCH FOR IMAGEMAGICK"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:731
#, no-wrap
msgid ""
"diff --git a/Android.mk b/Android.mk\n"
"index 5ab6699..4441417 100644\n"
"--- a/Android.mk\n"
"+++ b/Android.mk\n"
"@@ -52,6 +52,20 @@ LZMA_LIB_PATH                   := $(LOCAL_PATH)/xz-5.2.4\n"
" BZLIB_LIB_PATH                  := $(LOCAL_PATH)/bzip-1.0.8\n"
" LCMS_LIB_PATH                   := $(LOCAL_PATH)/liblcms2-2.9\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:752
#, no-wrap
msgid ""
"+LIBBZ2_ENABLED        := true\n"
"+LIBFFTW_ENABLED       := true\n"
"+LIBFREETYPE2_ENABLED  := true\n"
"+LIBJPEG_TURBO_ENABLED := true\n"
"+LIBLZMA_ENABLED       := true\n"
"+LIBOPENJPEG_ENABLED   := true\n"
"+LIBPNG_ENABLED        := true\n"
"+LIBTIFF_ENABLED       := true\n"
"+LIBWEBP_ENABLED       := true\n"
"+LIBXML2_ENABLED       := true\n"
"+LIBZLIB_ENABLED       := true\n"
"+LIBLCMS2_ENABLED      := true\n"
"+BUILD_MAGICKWAND      := true\n"
"+\n"
" #-------------------------------------------------------------\n"
" # Include all modules\n"
" #-------------------------------------------------------------\n"
"@@ -68,6 +82,9 @@ include $(MAKE_PATH)/libjpeg-turbo.mk\n"
" # libopenjpeg\n"
" include $(MAKE_PATH)/libopenjpeg.mk\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:758
#, no-wrap
msgid ""
"+# libwebp\n"
"+include $(MAKE_PATH)/libwebp.mk\n"
"+\n"
" # libtiff\n"
" include $(MAKE_PATH)/libtiff.mk\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:762
#, no-wrap
msgid ""
"@@ -77,9 +94,6 @@ include $(MAKE_PATH)/libpng.mk\n"
" # libfreetype2\n"
" include $(MAKE_PATH)/libfreetype2.mk\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:765
#, no-wrap
msgid ""
"-# libwebp\n"
"-include $(MAKE_PATH)/libwebp.mk\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:768
#, no-wrap
msgid ""
" # libfftw\n"
" include $(MAKE_PATH)/libfftw.mk\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:779
#, no-wrap
msgid ""
"diff --git a/libjpeg-turbo-2.0.2/jconfig.h b/libjpeg-turbo-2.0.2/jconfig.h\n"
"index 47d14c9..5c6f8ee 100644\n"
"--- a/libjpeg-turbo-2.0.2/jconfig.h\n"
"+++ b/libjpeg-turbo-2.0.2/jconfig.h\n"
"@@ -1,57 +1,43 @@\n"
"-/* autogenerated jconfig.h based on Android.mk var JCONFIG_FLAGS */ \n"
"+/* autogenerated jconfig.h based on Android.mk var JCONFIG_FLAGS */\n"
" #ifndef JPEG_LIB_VERSION\n"
" #define JPEG_LIB_VERSION 62\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:783
#, no-wrap
msgid ""
" #ifndef LIBJPEG_TURBO_VERSION\n"
" #define LIBJPEG_TURBO_VERSION 2.0.2\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:787
#, no-wrap
msgid ""
" #ifndef LIBJPEG_TURBO_VERSION_NUMBER\n"
" #define LIBJPEG_TURBO_VERSION_NUMBER 202\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:791
#, no-wrap
msgid ""
" #ifndef C_ARITH_CODING_SUPPORTED\n"
" #define C_ARITH_CODING_SUPPORTED\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:795
#, no-wrap
msgid ""
" #ifndef D_ARITH_CODING_SUPPORTED\n"
" #define D_ARITH_CODING_SUPPORTED\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:799
#, no-wrap
msgid ""
" #ifndef MEM_SRCDST_SUPPORTED\n"
" #define MEM_SRCDST_SUPPORTED\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:803
#, no-wrap
msgid ""
" #ifndef WITH_SIMD\n"
" #define WITH_SIMD\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:807
#, no-wrap
msgid ""
" #ifndef BITS_IN_JSAMPLE\n"
" #define BITS_IN_JSAMPLE 8\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:811
#, no-wrap
msgid ""
" #ifndef HAVE_LOCALE_H\n"
" #define HAVE_LOCALE_H\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:815
#, no-wrap
msgid ""
" #ifndef HAVE_STDDEF_H\n"
" #define HAVE_STDDEF_H\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:819
#, no-wrap
msgid ""
" #ifndef HAVE_STDLIB_H\n"
" #define HAVE_STDLIB_H\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:823
#, no-wrap
msgid ""
" #ifndef NEED_SYS_TYPES_H\n"
" #define NEED_SYS_TYPES_H\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:827
#, no-wrap
msgid ""
" #ifndef HAVE_UNSIGNED_CHAR\n"
" #define HAVE_UNSIGNED_CHAR\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:831
#, no-wrap
msgid ""
" #ifndef HAVE_UNSIGNED_SHORT\n"
" #define HAVE_UNSIGNED_SHORT\n"
" #endif\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:854
#, no-wrap
msgid ""
"diff --git a/libxml2-2.9.9/encoding.c b/libxml2-2.9.9/encoding.c\n"
"index a3aaf10..60f165b 100644\n"
"--- a/libxml2-2.9.9/encoding.c\n"
"+++ b/libxml2-2.9.9/encoding.c\n"
"@@ -2394,7 +2394,6 @@ xmlCharEncOutput(xmlOutputBufferPtr output, int init)\n"
" {\n"
"     int ret;\n"
"     size_t written;\n"
"-    size_t writtentot = 0;\n"
"     size_t toconv;\n"
"     int c_in;\n"
"     int c_out;\n"
"@@ -2451,7 +2450,6 @@ retry:\n"
"                             xmlBufContent(in), &c_in);\n"
"     xmlBufShrink(in, c_in);\n"
"     xmlBufAddLen(out, c_out);\n"
"-    writtentot += c_out;\n"
"     if (ret == -1) {\n"
"         if (c_out > 0) {\n"
"             /* Can be a limitation of iconv or uconv */\n"
"@@ -2536,7 +2534,6 @@ retry:\n"
" \t    }\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:867
#, no-wrap
msgid ""
"             xmlBufAddLen(out, c_out);\n"
"-            writtentot += c_out;\n"
"             goto retry;\n"
" \t}\n"
"     }\n"
"@@ -2567,9 +2564,7 @@ xmlCharEncOutFunc(xmlCharEncodingHandler *handler, xmlBufferPtr out,\n"
"                   xmlBufferPtr in) {\n"
"     int ret;\n"
"     int written;\n"
"-    int writtentot = 0;\n"
"     int toconv;\n"
"-    int output = 0;\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:881
#, no-wrap
msgid ""
"     if (handler == NULL) return(-1);\n"
"     if (out == NULL) return(-1);\n"
"@@ -2612,7 +2607,6 @@ retry:\n"
"                             in->content, &toconv);\n"
"     xmlBufferShrink(in, toconv);\n"
"     out->use += written;\n"
"-    writtentot += written;\n"
"     out->content[out->use] = 0;\n"
"     if (ret == -1) {\n"
"         if (written > 0) {\n"
"@@ -2622,8 +2616,6 @@ retry:\n"
"         ret = -3;\n"
"     }\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:883
#, no-wrap
msgid ""
"-    if (ret >= 0) output += ret;\n"
"-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:889
#, no-wrap
msgid ""
"     /*\n"
"      * Attempt to handle error cases\n"
"      */\n"
"@@ -2700,7 +2692,6 @@ retry:\n"
" \t    }\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:900
#, no-wrap
msgid ""
"             out->use += written;\n"
"-            writtentot += written;\n"
"             out->content[out->use] = 0;\n"
"             goto retry;\n"
" \t}\n"
"diff --git a/libxml2-2.9.9/xpath.c b/libxml2-2.9.9/xpath.c\n"
"index 5e3bb9f..505ec82 100644\n"
"--- a/libxml2-2.9.9/xpath.c\n"
"+++ b/libxml2-2.9.9/xpath.c\n"
"@@ -10547,7 +10547,7 @@ xmlXPathCompFilterExpr(xmlXPathParserContextPtr ctxt) {\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:922
#, no-wrap
msgid ""
" static xmlChar *\n"
" xmlXPathScanName(xmlXPathParserContextPtr ctxt) {\n"
"-    int len = 0, l;\n"
"+    int l;\n"
"     int c;\n"
"     const xmlChar *cur;\n"
"     xmlChar *ret;\n"
"@@ -10567,7 +10567,6 @@ xmlXPathScanName(xmlXPathParserContextPtr ctxt) {\n"
" \t    (c == '_') || (c == ':') ||\n"
" \t    (IS_COMBINING(c)) ||\n"
" \t    (IS_EXTENDER(c)))) {\n"
"-\tlen += l;\n"
" \tNEXTL(l);\n"
" \tc = CUR_CHAR(l);\n"
"     }\n"
"diff --git a/make/libicu4c.mk b/make/libicu4c.mk\n"
"index 21ec121..8b77865 100644\n"
"--- a/make/libicu4c.mk\n"
"+++ b/make/libicu4c.mk\n"
"@@ -250,7 +250,7 @@ LOCAL_MODULE    := libicuuc\n"
" LOCAL_SRC_FILES := $(src_files)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:926
#, no-wrap
msgid ""
" # when built in android, they require uconfig_local (because of android project), but we don't need this\n"
"-$(shell > $(ICU_COMMON_PATH)/unicode/uconfig_local.h echo /* Autogenerated stub file to make libicuuc build happy */) \\\n"
"+$(shell > $(ICU_COMMON_PATH)/unicode/uconfig_local.h echo /\\* Autogenerated stub file to make libicuuc build happy \\*/) \\\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:935
#, no-wrap
msgid ""
" ifeq ($(LIBXML2_ENABLED),true)\n"
"     include $(BUILD_STATIC_LIBRARY)\n"
"diff --git a/make/libjpeg-turbo.mk b/make/libjpeg-turbo.mk\n"
"index d39dd41..fdebcf3 100644\n"
"--- a/make/libjpeg-turbo.mk\n"
"+++ b/make/libjpeg-turbo.mk\n"
"@@ -230,30 +230,30 @@ JCONFIG_FLAGS += \\\n"
"     HAVE_UNSIGNED_SHORT\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:943
#, no-wrap
msgid ""
" JCONFIGINT_FLAGS += \\\n"
"-    BUILD=\"20190814\" \\\n"
"-    PACKAGE_NAME=\"libjpeg-turbo\" \\\n"
"-    VERSION=\"2.0.2\"\n"
"+    BUILD=\\\"20190814\\\" \\\n"
"+    PACKAGE_NAME=\\\"libjpeg-turbo\\\" \\\n"
"+    VERSION=\\\"2.0.2\\\"\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:947
#, no-wrap
msgid ""
" # originally defined in jconfigint.h, but the substitution has problems with spaces\n"
" LOCAL_CFLAGS := \\\n"
"     -DINLINE=\"inline __attribute__((always_inline))\"\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:965
#, no-wrap
msgid ""
" # create definition file jconfig.h, needed in order to build\n"
"-$(shell echo /* autogenerated jconfig.h based on Android.mk var JCONFIG_FLAGS */ > $(JPEG_LIB_PATH)/jconfig.h)\n"
"+$(shell echo \\/\\* autogenerated jconfig.h based on Android.mk var JCONFIG_FLAGS \\*\\/ > $(JPEG_LIB_PATH)/jconfig.h)\n"
" $(foreach name,$(JCONFIG_FLAGS), \\\n"
"     $(if $(findstring =,$(name)), \\\n"
"-        $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo #ifndef $(firstword $(subst =, ,$(name)))) \\\n"
"+        $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo \\#ifndef $(firstword $(subst =, ,$(name)))) \\\n"
"     , \\\n"
"-        $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo #ifndef $(name)) \\\n"
"+        $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo \\#ifndef $(name)) \\\n"
"     ) \\\n"
"-    $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo #define $(subst =, ,$(name))) \\\n"
"-    $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo #endif) \\\n"
"+    $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo \\#define $(subst =, ,$(name))) \\\n"
"+    $(shell >>$(JPEG_LIB_PATH)/jconfig.h echo \\#endif) \\\n"
"     $(shell >> $(JPEG_LIB_PATH)/jconfig.h echo.) \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:971
#, no-wrap
msgid ""
" # create definition file jconfigint.h, needed in order to build\n"
"-$(shell >$(JPEG_LIB_PATH)/jconfigint.h echo /* autogenerated jconfigint.h based on Android.mk vars JCONFIGINT_FLAGS */)\n"
"-$(foreach name,$(JCONFIGINT_FLAGS),$(shell >>$(JPEG_LIB_PATH)/jconfigint.h echo #define $(subst =, ,$(name))))\n"
"+$(shell >$(JPEG_LIB_PATH)/jconfigint.h echo /\\* autogenerated jconfigint.h based on Android.mk vars JCONFIGINT_FLAGS \\*/)\n"
"+$(foreach name,$(JCONFIGINT_FLAGS),$(shell >>$(JPEG_LIB_PATH)/jconfigint.h echo \\#define $(subst =, ,$(name))))\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:981
#, no-wrap
msgid ""
" ifeq ($(LIBJPEG_TURBO_ENABLED),true)\n"
"     include $(BUILD_STATIC_LIBRARY)\n"
"diff --git a/make/liblcms2.mk b/make/liblcms2.mk\n"
"index e1fd3b9..29ca791 100644\n"
"--- a/make/liblcms2.mk\n"
"+++ b/make/liblcms2.mk\n"
"@@ -10,6 +10,10 @@ LOCAL_C_INCLUDES := \\\n"
"     $(LCMS_LIB_PATH)/include \\\n"
"     $(LCMS_LIB_PATH)/src\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:986
#, no-wrap
msgid ""
"+LOCAL_EXPORT_C_INCLUDES := \\\n"
"+    $(LCMS_LIB_PATH) \\\n"
"+    $(LCMS_LIB_PATH)/include \\\n"
"+    $(LCMS_LIB_PATH)/src\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:994
#, no-wrap
msgid ""
" LOCAL_CFLAGS := \\\n"
"     -DHAVE_FUNC_ATTRIBUTE_VISIBILITY=1 \\\n"
"diff --git a/make/libmagick++-7.mk b/make/libmagick++-7.mk\n"
"index 5352ccb..929396d 100644\n"
"--- a/make/libmagick++-7.mk\n"
"+++ b/make/libmagick++-7.mk\n"
"@@ -12,7 +12,7 @@ LOCAL_C_INCLUDES  :=  \\\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1000
#, no-wrap
msgid ""
" ifneq ($(STATIC_BUILD),true)\n"
"     LOCAL_LDFLAGS += -fexceptions\n"
"-    LOCAL_LDLIBS    := -L$(SYSROOT)/usr/lib -llog -lz\n"
"+    LOCAL_LDLIBS    := -llog -lz\n"
" endif\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1007
#, no-wrap
msgid ""
" LOCAL_SRC_FILES := \\\n"
"diff --git a/make/libmagickcore-7.mk b/make/libmagickcore-7.mk\n"
"index 81293b2..d51fced 100644\n"
"--- a/make/libmagickcore-7.mk\n"
"+++ b/make/libmagickcore-7.mk\n"
"@@ -25,6 +25,7 @@ else ifeq ($(TARGET_ARCH_ABI),x86_64)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1009
#, no-wrap
msgid " endif\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1011
msgid "+LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1017
#, no-wrap
msgid ""
" LOCAL_C_INCLUDES  += \\\n"
"     $(IMAGE_MAGICK) \\\n"
"@@ -45,10 +46,9 @@ LOCAL_C_INCLUDES  += \\\n"
"     $(BZLIB_LIB_PATH) \\\n"
"     $(LCMS_LIB_PATH)/include\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1018
#, no-wrap
msgid "-\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1024
#, no-wrap
msgid ""
" ifneq ($(STATIC_BUILD),true)\n"
" # ignored in static library builds\n"
"-    LOCAL_LDLIBS    := -L$(SYSROOT)/usr/lib -llog -lz\n"
"+    LOCAL_LDLIBS    := -llog -lz\n"
" endif\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1031
msgid "diff --git a/make/libmagickwand-7.mk b/make/libmagickwand-7.mk index 7be2fb6..0bbcca5 100644 --- a/make/libmagickwand-7.mk +++ b/make/libmagickwand-7.mk @@ -14,7 +14,7 @@ LOCAL_C_INCLUDES := \\"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1037
#, no-wrap
msgid ""
" # always ignored in static builds\n"
" ifneq ($(STATIC_BUILD),true)\n"
"-    LOCAL_LDLIBS    := -L$(SYSROOT)/usr/lib -llog -lz\n"
"+    LOCAL_LDLIBS    := -llog -lz\n"
" endif\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1042
#, no-wrap
msgid ""
" LOCAL_SRC_FILES := \\\n"
"@@ -54,6 +54,29 @@ ifeq ($(OPENCL_BUILD),true)\n"
"     LOCAL_SHARED_LIBRARIES += libopencl\n"
" endif\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1075
#, no-wrap
msgid ""
"+LOCAL_SHARED_LIBRARIES += libstdc++\n"
"+\n"
"+ifeq ($(TARGET_ARCH_ABI),arm64-v8a)\n"
"+    LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)/configs/arm64\n"
"+    LOCAL_C_INCLUDES += $(IMAGE_MAGICK)/configs/arm64\n"
"+else ifeq ($(TARGET_ARCH_ABI),armeabi-v7a)  \n"
"+    LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)/configs/arm\n"
"+    LOCAL_C_INCLUDES += $(IMAGE_MAGICK)/configs/arm\n"
"+else ifeq ($(TARGET_ARCH_ABI),x86)\n"
"+    LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)/configs/x86\n"
"+    LOCAL_C_INCLUDES += $(IMAGE_MAGICK)/configs/x86\n"
"+else ifeq ($(TARGET_ARCH_ABI),x86_64)\n"
"+    LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)/configs/x86-64\n"
"+    LOCAL_C_INCLUDES += $(IMAGE_MAGICK)/configs/x86-64\n"
"+    \n"
"+    ifneq ($(STATIC_BUILD),true)\n"
"+        LOCAL_LDFLAGS += -latomic\n"
"+    endif\n"
"+    \n"
"+endif\n"
"+\n"
"+LOCAL_EXPORT_C_INCLUDES += $(IMAGE_MAGICK)\n"
"+\n"
" ifeq ($(BUILD_MAGICKWAND),true)\n"
"     ifeq ($(STATIC_BUILD),true)\n"
"         LOCAL_STATIC_LIBRARIES := \\\n"
"diff --git a/make/libpng.mk b/make/libpng.mk\n"
"index 24fb8ac..dda05fd 100644\n"
"--- a/make/libpng.mk\n"
"+++ b/make/libpng.mk\n"
"@@ -30,6 +30,7 @@ ifeq ($(TARGET_ARCH_ABI), arm64-v8a)\n"
" endif # TARGET_ARCH_ABI == arm64-v8a\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1079
#, no-wrap
msgid ""
"+LOCAL_EXPORT_C_INCLUDES := $(PNG_LIB_PATH)\n"
" LOCAL_C_INCLUDES := $(PNG_LIB_PATH)\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1088
#, no-wrap
msgid ""
" LOCAL_SRC_FILES += \\\n"
"diff --git a/make/libtiff.mk b/make/libtiff.mk\n"
"index ca43f25..2b17508 100644\n"
"--- a/make/libtiff.mk\n"
"+++ b/make/libtiff.mk\n"
"@@ -12,6 +12,9 @@ LOCAL_C_INCLUDES :=  \\\n"
"     $(LZMA_LIB_PATH)/liblzma/api \\\n"
"     $(WEBP_LIB_PATH)/src\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1101
#, no-wrap
msgid ""
"+LOCAL_EXPORT_C_INCLUDES :=  \\\n"
"+    $(TIFF_LIB_PATH)\n"
"+\n"
" ifeq ($(LIBLZMA_ENABLED),true)\n"
"     LOCAL_CFLAGS += -DLZMA_SUPPORT=1\n"
" endif\n"
"diff --git a/make/magick.mk b/make/magick.mk\n"
"index 3ba4b1d..5471608 100644\n"
"--- a/make/magick.mk\n"
"+++ b/make/magick.mk\n"
"@@ -18,7 +18,7 @@ LOCAL_C_INCLUDES  :=  \\\n"
"     $(FREETYPE_LIB_PATH)/include\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1107
#, no-wrap
msgid ""
"-LOCAL_LDLIBS    := -L$(SYSROOT)/usr/lib -llog -lz\n"
"+LOCAL_LDLIBS    := -llog -lz\n"
" LOCAL_SRC_FILES := \\\n"
"     $(IMAGE_MAGICK)/utilities/magick.c \\\n"
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1111
msgid "This file is part of GNU Emacs."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1116
msgid "GNU Emacs is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1121
msgid "GNU Emacs is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details."
msgstr ""

#. type: Plain text
#: emacs-30/java/INSTALL_editable:1123
msgid "You should have received a copy of the GNU General Public License along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>."
msgstr ""
