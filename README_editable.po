# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-11-06 23:52+0900\n"
"PO-Revision-Date: 2024-11-09 22:42+0900\n"
"Last-Translator: ayatakesi\n"
"Language-Team: ja\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: README_editable:3
msgid "This directory holds several different installation packages, each intended for a different kind of Android machine."
msgstr "このディレクトリーにはさまざまな異なる種類のAndroidマシンを意図した、複数のインストール用パッケージがある。"

#. type: Plain text
#: README_editable:6
#, no-wrap
msgid "emacs-3*.0.*0-16-armeabi-v7a.apk \t - armv7 devices running \t\t\t\t\t   Android 4.1 or later. emacs-3*.0.*0-24-armeabi-v7a.apk \t - armv7 devices running \t\t\t\t\t   Android 7.0 or later. emacs-3*.0.*0-21-arm64-v8a.apk\t\t - aarch64 devices running \t\t\t\t\t   Android 5.0 or later. emacs-3*.0.*0-29-arm64-v8a.apk\t\t - aarch64 devices running \t\t\t\t\t   Android 10.0 or later. emacs-3*.0.*0-21-mips64.apk\t\t - mips64 devices running \t\t\t\t\t   Android 5.0 or later. emacs-3*.0.*0-21-x86_64.apk\t\t - x86_64 devices running \t\t\t\t\t   Android 5.0 or later. emacs-3*.0.*0-29-x86_64.apk\t\t - x86_64 devices running \t\t\t\t\t   Android 10.0 or later. emacs-3*.0.*0-9-armeabi.apk\t\t - armeabi devices running \t\t\t\t\t   Android 2.3 or later. emacs-3*.0.*0-9-mips.apk\t\t - mips devices running \t\t\t\t\t   Android 2.3 or later. emacs-3*.0.*0-9-x86.apk\t\t\t - x86 devices running \t\t\t\t\t   Android 2.3 or later. emacs-3*.0.*0-8-armeabi.apk\t\t - armeabi devices running \t\t\t\t\t   Android 2.2.\n"
msgstr ""
"emacs-3*.0.*0-16-armeabi-v7a.apk - armv7 devices running Android 4.1 or later.\n"
"emacs-3*.0.*0-24-armeabi-v7a.apk - armv7 devices running Android 7.0 or later.\n"
"emacs-3*.0.*0-21-arm64-v8a.apk - aarch64 devices running Android 5.0 or later.\n"
"emacs-3*.0.*0-29-arm64-v8a.apk - aarch64 devices running Android 10.0 or later.\n"
"emacs-3*.0.*0-21-mips64.apk - mips64 devices running Android 5.0 or later.\n"
"emacs-3*.0.*0-21-x86_64.apk - x86_64 devices running Android 5.0 or later.\n"
"emacs-3*.0.*0-29-x86_64.apk - x86_64 devices running Android 10.0 or later.\n"
"emacs-3*.0.*0-9-armeabi.apk - armeabi devices running Android 2.3 or later.\n"
"emacs-3*.0.*0-9-mips.apk - mips devices running Android 2.3 or later.\n"
"emacs-3*.0.*0-9-x86.apk\t- x86 devices running Android 2.3 or later.\n"
"emacs-3*.0.*0-8-armeabi.apk - armeabi devices running Android 2.2.\n"

#. type: Plain text
#: README_editable:9
msgid "Always install the package for the CPU architecture used by your Android system; if you install any other compatible package (such as the x86 package on an x86_64 system), subprocess execution will fail."
msgstr "如何なる時もあなたのAndroidシステムが使用しているCPU向けパッケージをインストールすること。他のシステムと互換性のあるパッケージ(たとえばx86_64システムにx86パッケージをインストールするなど)をインストールすると、サブプロセスの実行に失敗するだろう。"

#. type: Plain text
#: README_editable:12
msgid "Additionally, the directory `termux' contains copies of these installation packages built with their ``shared user ID'' set to `com.termux' and a version of the Termux terminal emulator signed with Emacs's signing keys.  Together, those packages enable Emacs to make use of the Termux package repositories."
msgstr "上記に加えてディレクトリー`termux`には`shared user ID`を`com.termux`にセットしてビルド、さらにEmacsの署名キーで署名したバージョンのTermux端末エミュレータのインストール様パッケージのコピーが含まれている。これらのパッケージを合わせるとTermuxのパッケージレポジトリ使用できるEmacsが利用可能になる。"

#. type: Plain text
#: README_editable:15
msgid "To install Emacs with Termux support, first remove any existing copy of Emacs (this will remove all data within Emacs's home directory, so make a backup beforehand!) and Termux, to avoid signature or user ID conflicts.  Next, install Termux _first_, then install Emacs.  Once both packages are installed, open Termux, and at the shell prompt displayed therein, type:"
msgstr "Termuxサポート付きEmacsをインストールするためには、署名やユーザーIDの競合を防ぐためにまず既存のEmacsとTermuxのコピーをすべて削除する必要がある(Emacsのホームディレクトリー内のすべてのデータが削除されるので事前にバックアップすること!)。次は **最初に** Termux、その後にEmacs話インストールする。一度これらのパッケージを両方インストールしたらTermuxをオープンして、表示されたシェルプロンプトで以下をタイプする:"

#. type: Plain text
#: README_editable:18
#, no-wrap
msgid "  $ pkg update && pkg upgrade\n"
msgstr "$ pkg update && pkg upgrade\n"

#. type: Plain text
#: README_editable:21
#, no-wrap
msgid "confirming each of the inquiries made by the dpkg package manager. Once all applications have been installed and updated, open Emacs, and introduce the following code to `early-init.el': (setenv \"PATH\" (format \"%s:%s\" \"/data/data/com.termux/files/usr/bin\" \t\t       (getenv \"PATH\"))) (push \"/data/data/com.termux/files/usr/bin\" exec-path)\n"
msgstr ""
"dpkgパッケージマネージャーが求める確認には同意していく。すべてのアプリケーションがインストールされて更新されたら、Emacsをオープンして以下のコードを`early-init.el`に記述する:\n"
"(setenv \"PATH\" (format \"%s:%s\" \"/data/data/com.termux/files/usr/bin\"\n"
"               (getenv \"PATH\")))\n"
"(push \"/data/data/com.termux/files/usr/bin\" exec-path)\n"

#. type: Plain text
#: README_editable:24
msgid "after which programs installed through Termux will be made accessible to Emacs."
msgstr "Termuxでプログラムがインストールされれば、それらにEmacsがアクセスできるようになる。"

#. type: Plain text
#: README_editable:27
msgid "This section of the FAQ previously provided incorrect advice stating that setting the environment variable `LD_LIBRARY_PATH' was required to execute binaries from Termux.  In truth, Termux embeds the path to its shared libraries within its executables, and providing a separate `LD_LIBRARY_PATH' causes system libraries with conflicting names to be interposed into the set of libraries imported during the linking process when Termux binaries are being executed (and vice versa with Termux libraries and system binaries), yielding various bizarre errors."
msgstr "FAQのこのセクションでは、以前はTermuxからバイナリを実行するために環境変数`LD_LIBRARY_PATH'をセットするという誤った解説が提供されていた。実際にはTermuxの実行可能バイナリにはTermuxの共有ライブラリーのパスが埋め込まれており、Termuxのバイナリが実行される際のリンクプロセス中にインポートされる一連のライブラリーにたいして(逆も発生し得る)、別個に提供される`LD_LIBRARY_PATH`によるシステムライブラリー名の競合による干渉が原因の数多の奇妙なエラーが発生するのだ。"

#. type: Plain text
#: README_editable:30
msgid "Please bear in mind that Termux (and the copies of Emacs built to use it) can only be installed on Android 7.0 and later."
msgstr "Termux(とそれを使用するようにビルドしたEmacs)はAndroid 7.0以降にしかインストールできないことをどうか忘れないで欲しい。"

#. type: Plain text
#: README_editable:33
msgid "FREQUENTLY ANSWERED QUESTIONS"
msgstr "FREQUENTLY ANSWERED QUESTIONS"

#. type: Plain text
#: README_editable:36
msgid "The answers to most questions frequently asked by users of this Emacs port can be found in the Emacs and/or Lisp Reference manuals that it is distributed alongside.  Nevertheless, a list of very frequently answered questions has been compiled, for the benefit of individuals who are unaware of the previously mentioned documentation."
msgstr "このEmacsポートのユーザーから寄せられるFAQにたいする解答のほとんどは、同時に配布されているEmacsおよびLispのリファレンスマニュアルに答えを見い出すことができるだろう。にも関わらず前述したドキュメントの存在を知らない人の利益のために、さまざまなFAQのリストここにまとめておいた。"

#. type: Plain text
#: README_editable:39
#, no-wrap
msgid "1. Which package do I download?\n"
msgstr "1. どのパッケージをダウンロードすればいいの?\n"

#. type: Plain text
#: README_editable:42
msgid "Probably `emacs-3*.0.*0-29-arm64-v8a.apk' or its counterpart in the `termux' directory.  If your phone or tablet runs a 32-bit OS, then most likely `emacs-3*.0.*0-16-armeabi-v7a.apk'."
msgstr "おそらく`emacs-3*.0.*0-29-arm64-v8a.apk`か`termux`ディレクトリーの同等パッケージだろう。あなたのスマホやタブレットが32ビットOSを実行している場合は、多分`emacs-3*.0.*0-16-armeabi-v7a.apk`。"

#. type: Plain text
#: README_editable:45
#, no-wrap
msgid "2. Which version(s) of Emacs do I install, and which do these packages    correspond to?\n"
msgstr "2. どのパッケージをインストールすると、どのバージョンのEmacsがインストールされるの?\n"

#. type: Plain text
#: README_editable:48
msgid "Packages labeled `emacs-30.0.90' are produced from the `emacs-30' branch of Emacs that will ultimately become the Emacs 30.1 release, while those labeled `emacs-31.0.50' are produced from the development branch that will not be released in the immediate future."
msgstr "`emacs-30.0.90`という名前のパッケージは`emacs-30`ブランチから生成されており、最終的にはEmacs 30.1としてリリースされる。一方`emacs-31.0.50`という名前のパッケージは、すぐにはリリースされない開発ブランチから生成したパッケージ。"

#. type: Plain text
#: README_editable:51
msgid "Although the versions in the package names and reported by emacs-version correspond to one pretest or another, they are built from Git repository sources, which is to say that there is no guarantee that they will actually be produced from the same sources as the pretests bearing the same versions."
msgstr "パッケージ名のバージョンと変数emacs-versionによってプリントされるバージョンは、プレテスト(訳注: pretest、いわゆるベータ版のようなもの)のいずれかに相当するバージョンではあるがGitレポジトリのソースからビルドされており、プレテストのバージョンが同じであっても厳密にそのバージョンのソースからビルドされている保証はない。"

#. type: Plain text
#: README_editable:54
#, no-wrap
msgid "3. Where do I get help?\n"
msgstr "3. どこで助けを得られるだろうか?\n"

#. type: Plain text
#: README_editable:57
msgid "help-gnu-emacs@gnu.org."
msgstr "help-gnu-emacs@gnu.orgだ。"

#. type: Plain text
#: README_editable:60
#, no-wrap
msgid "4. Where do I report bugs/submit patches?\n"
msgstr "4. バグレポやpatchはどこに送付すれば?\n"

#. type: Plain text
#: README_editable:63
msgid "bug-gnu-emacs@gnu.org."
msgstr "bug-gnu-emacs@gnu.orgだ。"

#. type: Plain text
#: README_editable:66
#, no-wrap
msgid "5. How do I access my documents/source code/etc?\n"
msgstr "5. どうやってドキュメントやソースコード等にアクセスするの?\n"

#. type: Plain text
#: README_editable:69
msgid "Android apps can be granted access to three different kinds of storage."
msgstr "Androidアプリには3つの異なる種類のストレージにアクセスする権限を付与できる。"

#. type: Plain text
#: README_editable:72
msgid "The first is the app data directory, which also serves as the app's Unix home directory, and is only accessible to Emacs itself."
msgstr "1つ目はアプリのデータディレクトリー。これはアプリにとってUnixホームディレクトリーに相当する役目をもっており、アクセスできるのはEmacs自身だけ。"

#. type: Plain text
#: README_editable:75
msgid "The second is the external storage directory (located at /sdcard), which Emacs must explicitly request permission to access.  This directory is what shows up as the ``internal storage'' in your file manager app."
msgstr "2つ目は外部ストレージディレクトリー(/sdcardにある)。ここにアクセスするには、Emacsが明示的にアクセス権限を要求しなければならない。ファイルマネージャーアプリでは\"内部ストレージ\"として表示されるディレクトリー。"

#. type: Plain text
#: README_editable:78
msgid "Prior to Android 11, granting Emacs rights to access this directory can be performed from the Permissions menu in the App Info settings panel, by enabling the option labeled Storage; after Android 11, the path to the setting has changed, and must instead be granted from the Special App Access menu in Settings."
msgstr "Android 11より前は、このディレクトリーへのアクセス権限をEmacsに与えるためにApp Info設定メニューのPermissionsメニューからStorageという名前のオプションを有効にして行うことができた。Android 11では設定へのアクセス経路が変更されたので、SettingsにあるSpecial App Accessメニューから権限を与えなければならない。"

#. type: Plain text
#: README_editable:81
msgid "Contrary to several descriptions being circulated online, it is not necessary to install the Termux variant for access to external storage.  That being said, either application will gain any permissions granted to the other (of which the right to access external storage is one) as a consequence of their shared user ID."
msgstr "オンラインに出回っている口上とは異なり、外部ストレージにアクセスするためにTermuxの変種をインストールする必要はない。とはいえ2つのアプリケーションでユーザーIDを共有した結果として、一方のアプリケーションにアクセス権限(外部ストレージへのアクセス権限もそのうちの1つ)が付与されれば、もう一方のアプリケーションもその権限を取得する。 "

#. type: Plain text
#: README_editable:84
msgid "The third is storage provided by other applications (Nextcloud, for example) through the Storage Access Framework -- this storage is extremely slow (thanks in part to Google's botched implementation of document provider IPC), and is located within subdirectories of /content/storage.  Before any of these directories become available, you must run `M-x android-request-directory-access', and select the directory you want from the file selection panel displayed."
msgstr "3つ目は他のアプリケーションたとえばNextcloud)によって提供されるストレージ。これはStorage Access Frameworkを通じて提供される、/content/storageのサブディレクトリー配下にあるとてつもなく低速なストレージだ(Googleのドキュメントプロバイダー実装の失敗に祝福あれ)。これらのディレクトリーいずれかが利用可能になる前に`M-x android-request-directory-access`を実行して、表示されたファイル選択パネルから権限を付与したいディレクトリーを選択しなければならない。"

#. type: Plain text
#: README_editable:87
msgid "Because the /content directory is implemented entirely within Emacs's own file input/output primitives, subprocess cannot access any files it contains.  If you attempt to create a subprocess inside that directory, its working directory will actually be set to Emacs's home directory.  This additionally applies to the /assets directory holding Lisp and ancillary files distributed with Emacs."
msgstr "/contentディレクトリーはEmacs独自のファイル入出力プリミティブによって完全に実装されているので、サブプロセスがそのディレクトリーに含まれるファイルにアクセスすることはできない。そのディレクトリー内でサブプロセス生成を試みると、そのプロセスの実際の作業ディレクトリーは、実際にはEmacsのホームディレクトリーにセットされるだろう。これはEmacsとともに配布されるLispおよび補助ファイルを補助する/assetsディレクトリーにも適用される。"

#. type: Plain text
#: README_editable:90
msgid "Refer to (emacs)Android Filesystem and (emacs)Android Document Providers within the Emacs manual for more details."
msgstr "詳細についてはEmacsマニュアルの(emacs)Android Filesystem、および(emacs)Android Document Providersを参照のこと。"

#. type: Plain text
#: README_editable:93
#, no-wrap
msgid "6. Where is my .emacs/.emacs.d/init.el?\n"
msgstr "6. わたしの.emacs、.emacs.d、init.elはどこにいった?\n"

#. type: Plain text
#: README_editable:96
msgid "~/.emacs, of course."
msgstr "もちろん~/.emacsにある。"

#. type: Plain text
#: README_editable:99
msgid "You cannot copy an Emacs configuration to the so-called internal storage on your phone and make it immediately available to Emacs. This is because, being subject to Android's security model, Emacs is the only app with permission to access its home directory."
msgstr "Emacsの構成をスマホ上のいわゆる内部ストレージにコピーして、すぐにEmacsから利用可能にすることはできない。なぜならこれはAndroidのセキュリティーモデルに起因する問題であり、Emacsのホームディレクトリーにアクセス可能な唯一のアプリがEmacsだけであるという理由による。"

#. type: Plain text
#: README_editable:102
msgid "Instead, follow the procedures outlined in the previous answer to grant Emacs access to that internal storage, and copy your configuration files from there to your home directory."
msgstr "Emacsに内部ストレージへのアクセス権限を付与する方法に関する解答で示した手順にしたがい、それからそのディレクトリーにある構成ファイルをホームディレクトリーにコピーすればよい。"

#. type: Plain text
#: README_editable:105
msgid "Android doesn't guarantee that Emacs's home directory will be located at any predetermined location, but it is normally placed at /data/data/org.gnu.emacs/files.  On systems with multiple users (Android users, not Unix users), it may instead be located somewhere within /data/user/ if Emacs is installed for a user other than the device owner."
msgstr "AndroidはEmacsのホームディレクトリーがあらかじめ決められた場所に配置されることを保証しないが、通常は/data/data/org.gnu.emacs/filesになるだろう。複数ユーザー(Unixユーザーではない; Androidユーザーだ)のシステムでは、デバイスのオーナー以外のユーザーによってEmacsがインストールされた場合には、/data/user/配下のどこかに配置される可能性がある。"

#. type: Plain text
#: README_editable:108
#, no-wrap
msgid "7. Where are binaries like emacs, emacsclient, and movemail?\n"
msgstr "7. emacs、emacsclient、movemailといったバイナリはどこ?\n"

#. type: Plain text
#: README_editable:111
msgid "Short answer: ~/../lib."
msgstr "簡単に言うと~/../lib。"

#. type: Plain text
#: README_editable:114
msgid "Long answer: because Android restricts both the locations from where executable files can be loaded and the names of the executables that it will extract from installation packages, Emacs files all of its ancillary executables under names resembling shared libraries.  When Emacs is installed, Android extracts these executables to a private directory that Emacs symlinks at startup to `lib' within the parent directory of its home directory.  Refer to (elisp)Subprocess Creation and (emacs)Android Environment for more details."
msgstr "長いバージョンで答えるとAndroidは実行可能ファイルをロードできる場所、それにインストールパッケージから抽出される実行可能ファイルの名前の両方に制限を課すので、Emacsは補助的な実行可能ファイルを共有ライブラリーに習った名前にしている。Emacsがインストールされると、AndroidはEmacsが起動時にホームディレクトリーの親ディレクトリーにある`lib`としてシンボリックリンクするプライベートディレクトリーにこれらの実行可能バイナリを抽出する。詳細については(elisp)Subprocess Creation、および(emacs)Android Environmentを参照のこと。"

#. type: Plain text
#: README_editable:117
msgid "While the names of these executables are stable (and will be so for the forseeable future), it is better to use the variables that are specifically defined to provide their names: `emacsclient-program-name', `movemail-program-name' and so on, in place of hard-coded names such as `libemacsclient.so' and `libmovemail.so'.  Following this advice will guarantee that your code continues to run faithfully in the future and on non-Android systems."
msgstr "これの実行可能バイナリの名前は比較的に安定しているので(近い将来においても)、`libemacsclient.so`、`libmovemail.so`等のようなハードコードされた名前ではなく`emacsclient-program-name`、`movemail-program-name`等といった名前を提供するために特に定義した変数を用いるほうがよい。このアドバイスにしたがっていれば将来、そして非Androidデバイスでもあなたのコードが実行され続けることが保証されるだろう。"

#. type: Plain text
#: README_editable:120
msgid "The location of `emacs' is more involved: the `libemacs.so' is actually a real shared library containing all of the Emacs C code. This code is not functional until it is linked to a bundle of Java code implementing the Android filesystem and GUI interfaces, which is automatically performed by the Android JVM at run-time when you open Emacs from the app icon."
msgstr "`emacs`の場所についてはさらに複雑になる。実際には共有ライブラリーの`libemacs.so`こそが、EmacsのCコードすべてを含んでいるからだ。このコードはAndroidのファイルシステムおよびGUIインターフェイスを実装する一連のJava-コードにリンクされるまでは機能しない。これはアプリケーションからEmacsをオープンした実行時に、Android JVMによって自動的に実行されるのだ。"

#. type: Plain text
#: README_editable:123
msgid "`libandroid-emacs.so' is a binary that tries to invoke the JVM with the right arguments for starting Emacs on the command line.  While it is true that Emacs cannot create a display connection when started in this manner, the greatest difficulty posed by this approach is rather its reliance on Android internals that are subject to change without notice.  Because of this unfortunate dependency, it does not work reliably on all versions of Android, and must be revised after each major change to the OS."
msgstr "`libandroid-emacs.so'はコマンドラインでのEmacsの開始において、正しい引数でJVMの呼び出しを試みるバイナリだ。Emacsがこの方法で開始された場合にはディスプレイ接続を作成できないというのは事実だが、予告なしに変更されるAndroid内部に依存する点こそがこのアプローチの最大の難点である。すべてのバージョンのAndroidで確実には動作しないこと、そしてOSにメジャーな変更が行われる度に後から修正する必要があるのは、この不適切な依存関係が理由なのだ。"

#. type: Plain text
#: README_editable:126
msgid "The true solution to this conundrum is to avoid running Emacs inside itself, obviating the need for that binary in the first place."
msgstr "そもそもEmacs内部でEmacsを実行するのではなく、このバイナリの必要性の排除こそがこの難問にたいする真の解決策だろう。"

#. type: Plain text
#: README_editable:129
#, no-wrap
msgid "8. Where do I get more software?  (clang, git, python, etc.)\n"
msgstr "8. どこでソフトウェアを入手できるの?  (clang、git、pythonなど)\n"

#. type: Plain text
#: README_editable:132
msgid "See (emacs)Android Software.  The `termux' directory holds versions of both Termux and Emacs that share the same user ID and signing key."
msgstr "(emacs)Android Softwareを参照のこと。`termux`ディレクトリーにはどちらも同じ共有ユーザーID、署名キーをもったバージョンのTermuxとEmacsがある。"

#. type: Plain text
#: README_editable:135
#, no-wrap
msgid "9. The on-screen keyboard isn't displayed!  You must only use Emacs    with a physical keyboard!\n"
msgstr "9. オンスクリーンキーボードが表示されない! 物理キーボードでしかEmacsを使っていないんだね!\n"

#. type: Plain text
#: README_editable:138
msgid "The author of this port does not use a physical keyboard under Android.  He uses AnySoftKeyboard for English input, and Fcitx"
msgstr "このポートの作成者は、Androidでは物理キーボードを使っていない。彼が使っているのは英語入力にはAnySoftKeyboard、CJK入力には以下のFcitxを使っている。"

#. type: Plain text
#: README_editable:141
#, no-wrap
msgid "  https://github.com/fcitx5-android/fcitx5-android/\n"
msgstr ""

#. type: Plain text
#: README_editable:144
msgid "for CJK input.  With that misconception out of the way, there are at least two reasons for asking this question."
msgstr "疑いは晴れたとして、このような誤解が生じたのには、少なくとも2つの理由が考えられる。"

#. type: Plain text
#: README_editable:147
msgid "The first is that you may have unthinkingly disabled the menu bar or tool bar in keeping with an online Emacs introductory text, and now want to perform operations which are then impossible without a keyboard.  This is a very unwise decision on Android: any operation performed from a keyboard can also be performed from the menu bar or tool bar (including M-x, which is Edit -> Execute Command), making the use of a keyboard unnecessary."
msgstr "1つ目の理由として考えられるのはオンラインで手に入れた入門テキストの記述にしたがい、意味を吟味することなくメニューバーやツールバーを無効にして、その後にキーボードがなくては行うことが不可能な操作を行いたい場合だろう。これはAndroidにおいてはとんでもなく愚かな判断だ。キーボードから行うすべての操作はメニューバーやツールバーからも行うことができるので、キーボードを使う必要はなくなる(M-xを含む; Edit -> Executeがそれだ)。"

#. type: Plain text
#: README_editable:150
msgid "With that in mind, and to save screen space, the keyboard is normally hidden when the current window has selected a read-only buffer.  The second reason for asking this question is wanting to always display the on-screen keyboard; to do so, simply customize the option `touch-screen-display-keyboard' to a non-nil value.  (Options -> Customize Emacs, hint, hint.)"
msgstr "上記を念頭に置いて考えると、カレントウィンドウが読み取り専用バッファーを選択した際には、画面スペースを確保するためにキーボードが非表示になるからだろう。2つ目の理由として考えられるのは、オンスクリーンキーボードを常時表示しておきたいという理由だろう。これは単にオプション`touch-screen-display-keyboard`を非nil値にカスタマイズするだけで行うことができる(ヒント: Options -> Customize Emacs)。"

#. type: Plain text
#: README_editable:153
msgid "For more details and an in depth explanation of how Emacs treats touch screen and on-screen-keyboard input, refer to (emacs)Touchscreens, (emacs)On-Screen Keyboards, (elisp)Misc Events, and (elisp)Touchscreen Events."
msgstr "Emacsがタッチスクリーンおよびオンスクリーンキーボード入力を扱う方法に関する詳細については(emacs)On-Screen Keyboards、(elisp)Misc Events、(elisp)Touchscreen Eventsを参照のこと。"

#. type: Plain text
#: README_editable:156
#, no-wrap
msgid "10. My package X that relies on reading raw key events / binding keys     globally doesn't work with an on screen keyboard!\n"
msgstr "10. 生のキーイベント/キーバインドに依存するわたしのパッケージXは、オンスクリーンキーボードでは概ね動作しないのだが!\n"

#. type: Plain text
#: README_editable:159
msgid "This is because Android input methods rely on directly invoking Emacs's buffer editing primitives, which is dubbed text conversion. Emacs tries to implement features such as electric-indent, electric-pair and Auto-Fill through analyzing the course of their edits after they take place."
msgstr "Androidの入力メソッドが、Emacsのバッファー編集プリミティブ(テキスト変換と呼ばれている)の直接呼び出しに依存しているのが理由だ。Emacsは編集後の経過を分析することによってelectric-indentやelectric-pair、Auto-Fillなどを実装している。"

#. type: Plain text
#: README_editable:162
msgid "Consequentially, Emacs doesn't receive raw key press events as you type into the input method, your package doesn't work, and the text you type is inserted directly into the current buffer in lieu of the events you meant to send."
msgstr "その結果、Emacsは入力メソッドにタイプしたキーの内の押下イベントを受け取らず、あなたのパッケージは機能せず、あなたがタイプして送信しようと意図したイベントのかわりに、タイプしたテキストが直接バッファーに挿入されることと相なる訳だ。"

#. type: Plain text
#: README_editable:165
msgid "You can either fix these packages to disable text conversion through the variable `overriding-text-conversion-style' or the buffer-local variable `text-conversion-style', or disable text conversion globally by setting the first variable."
msgstr "変数`overriding-text-conversion-style`、またはバッファーローカル変数`text-conversion-style`のいずれかを通じてこれらのパッケージのテキスト変換を無効にすれば解決するだろう(テキスト変換をグローバルに無効にするなら前者の変数)。"

#. type: Plain text
#: README_editable:168
msgid "See (elisp)Misc Events for further elucidations on the subject of text conversion."
msgstr "テキスト変換の詳細については、(elisp)Misc Eventsを参照のこと。"

#. type: Plain text
#: README_editable:171
#, no-wrap
msgid "11. Point jumps to the start of the text after I type an opening     paren!  (And other problems with IMEs in Text or Prog Mode     derivatives.) This is probably a bug in your IME.  Emacs implements the Android input method interfaces to the letter, but Android's own implementation leaves much to be desired.\n"
msgstr ""
"11. 開きカッコをタイプするとポイントがテキスト先頭にジャンプした! (TextモードやProgモードでのIMEにまつわる問題も含む)\n"
"\n"
"あなたが使っているIMEのバグだ、多分。EmacsはAndroidの入力メソッドのインターフェイスを厳守して実装しているが、Androidの独自実装にはまだ多くの点が残されている。\n"

#. type: Plain text
#: README_editable:174
msgid "One extremely common transgression committed by input methods is to assume that the `getExtractedText' IME request will always reply with the entire contents of the buffer regardless of the number of characters the IME requests, which is indeed the case when the editor is the Android TextView widget.  In contrast, Emacs respects the size specified in the request, in adherence with the documented behavior for that request."
msgstr "入力メソッドが頻繁に犯すありがちな違反というものがある。その1つがIMEがリクエストした文字数に関わらず、IMEの`getExtractedText`リクエストが常にバッファーのコンテンツ全体を応答すると仮定することだ(確かにAndroidのTextViewを使ったエディターならそのとおり)。そのようなエディターとは反対に、Emacsはリクエストに指定されたサイズにしたがう。これはリクエストの文書化された趣旨に沿った動作だ。"

#. type: Plain text
#: README_editable:177
msgid "An additional transgression is assuming that, since the result of that request is always the entirety of the text buffer's contents, the caret offset returned by the input method is the position of the insertion point.  In reality, the base of this offset is the start of the text returned."
msgstr "このリクエストにたいする応答が常にバッファーテキストの内容全体ならば、入力メソッドがリターンするcaretオフセット(訳注: テキストが挿入された相対位置)が挿入ポイントの位置だと仮定することにより、さらに違反を犯すことになる。このオフセットとは、実際にはリターンされるテキストの先頭からのオフセットだからだ。"

#. type: Plain text
#: README_editable:180
msgid "Together, these two implementation mistakes result in many problematic input methods misleading themselves into thinking that point is at the start of the buffer.  After inserting a closing paren as part of their own electric-pair features, such input methods often try to obtain the location of the point and move to the last character prior to the closing paren.  But what they think is the position of that character is actually the very beginning of the buffer."
msgstr "問題を抱える多くの入力メソッドにおいてこれら2つの実装上の誤りが合体すると、ポイントがバッファーの先頭にあるという誤解が生じる。このような入力メソッドはelectric-pairに類似した独自機能の一部として、閉じカッコの前の最後の文字のポイント位置の取得を試みがちだ。しかし彼ら最後の文字だと思っている位置は、実際にはまさにバッファーの先頭に他ならないのだ。"

#. type: Plain text
#: README_editable:183
msgid "If the situation illustrated above does not appear consistent with the behavior you witness from your IME, however, please send a bug report (with M-x report-emacs-bug.)  In that report, mention the name and version number of the IME you are using."
msgstr "あなたのIMEで目撃した挙動が上述した状況に該当しなければ、どうか使用しているIMEの名前とバージョン番号を明記して、(M-x report-emacs-bugで)バグレポートを送信して欲しい。"

#. type: Plain text
#: README_editable:186
#, no-wrap
msgid "12. When I type in fundamental mode / a Custom buffer, the input     method goes haywire!\n"
msgstr "12. fundamentalモードやCustomバージョンでタイプすると、入力メソッドが発狂しますが!\n"

#. type: Plain text
#: README_editable:189
msgid "This is a bug in the IME.  Input methods don't just settle for implementing text conversion incorrectly, they sometimes also forget to implement the `TYPE_NULL' input mode that requires them to behave as plain keyboard devices."
msgstr "そのIMEのバグ。入力メソッドが誤ったテキスト変換を実装するに留まらず、素のキーボードデバイスとして振る舞うことを要求する`TYPE_NULL`入力モードの実装をも失念する場合もあるのだ。"

#. type: Plain text
#: README_editable:192
msgid "These bugs typically manifest as no text being inserted (since Emacs doesn't provide an input connection when text conversion is disabled), as the Delete key not working, or in any number of other ways.  Get a better input method, and exhort your friends to do the same."
msgstr "これらのバグは(テキスト変換が無効だとEmacsは入力コネクションを提供しないので)何もテキストが挿入されない、Deleteキーが機能しない、その他さまざまな症状として顕在化しがちだ。もっとましな入力メソッドを入手すること。友人にもそうするよう勧めること。"

#. type: Plain text
#: README_editable:195
#, no-wrap
msgid "13. How do I display modifier keys in the tool bar?\n"
msgstr "13. どうやってツールバーに修飾キーを表示するの?\n"

#. type: Plain text
#: README_editable:198
msgid "Enable `modifier-bar-mode' and `tool-bar-mode'.  A small secondary tool bar will be displayed together with the tool bar containing buttons that read and modify subsequent events with each of the modifier keys understood by Emacs."
msgstr "`modifier-bar-mode`と`tool-bar-mode`を有効にする。ツールバーとともに、Emacsが認識する各修飾キーによって後続イベントを読み取り変更するボタンをもった第2の小さなツールバーが表示されるだろう。"

#. type: Plain text
#: README_editable:201
msgid "When you tap one of these buttons, Emacs also displays the on-screen keyboard and momentarily disables text conversion.  This enables you to type key sequences containing modifier keys even in a Text or Prog Mode buffer where text conversion is enabled."
msgstr "これらのボタンのいずれかをタップするとEmacsはオンスクリーンキーボードを表示して、テキスト変換を一時的に無効にする。これによりテキスト変換が有効なTextモードやProgモードのバッファーであっても、修飾キーを含んだキーシーケンスのタイプが有効になる。"

#. type: Plain text
#: README_editable:204
#, no-wrap
msgid "14. How do I display the tool bar on the bottom of its frame?  I want     the buttons and modifier bar to be near my fingers as I type.\n"
msgstr "14. ツールバーをフレーム下端に表示するには? タイプするとき指の近くにボタンと修飾バーを配置したいんだ。\n"

#. type: Plain text
#: README_editable:207
msgid "Although not specific to the Android port, the implementation of this feature on non-GTK systems was motivated by one such request from an Android port user."
msgstr "Androidポートに限られた話しではないが、非GTKシステムにおけるこの機能の実装モチベーションはAndroidポートのユーザーのリクエストにある。"

#. type: Plain text
#: README_editable:210
msgid "Customize `tool-bar-position' to `bottom'."
msgstr "`tool-bar-position`を`bottom`にカスタマイズする。"

#. type: Plain text
#: README_editable:213
#, no-wrap
msgid "15. How do I quit?  I can't type C-g.\n"
msgstr "15. 閉じ方は?  C-gをタイプできないんだ。\n"

#. type: Plain text
#: README_editable:216
msgid "Click the volume down button in rapid succession, which acts as a regular C-g."
msgstr "ボリュームダウンボタンを素早く連続クリック。通常のC-gとして機能する。"

#. type: Plain text
#: README_editable:219
#, no-wrap
msgid "16. How do I open other files in Emacs?\n"
msgstr "16. Emacsで他のファイルを開く方法は?\n"

#. type: Plain text
#: README_editable:222
msgid "Run `M-x server-start' (or better yet, place it in your initialization files.)"
msgstr "`M-x server-start`を実行する(何なら初期化ファイルに記述してしまう)。"

#. type: Plain text
#: README_editable:225
msgid "When you try to open a text file, the system will display a dialog asking for a program to run.  Select Emacs: emacsclient will be called to open the file in question, or Emacs will be started with that file as an argument if it's not already running."
msgstr "あなたがテキストファイルのオープンを試みると、実行するプログラムを尋ねるダイアログをシステムが表示するだろう。Emacsを選択するとそのファイルをオープンするためにemacsclientが呼び出されるか、Emacsがまだ実行中でなければそのファイルを引数としてEmacsが開始されることになる。"

#. type: Plain text
#: README_editable:228
#, no-wrap
msgid "17. What is the difference between this app and Emacs from Termux?\n"
msgstr "17. このアプリとTermuxのEmacs、何が違うの?\n"

#. type: Plain text
#: README_editable:231
msgid "This app runs as a native Android GUI program, enabling it to take advantage of input methods, document provider programs and suchlike, and its support for touch screen input is superior, with most common gestures recognized and/or transparently translated into mouse events."
msgstr "このアプリはAndroidのネイティブGUIプログラムとして実行される。入力メソッド、ドキュメントプロバイダープログラムなどを利用できる利点があり、タッチスクリーンサポート入力に優れているし、一般的なジェスチャーのほとんどを認識するし、それをマウスイベントに透過的に変換できたりもする。"

#. type: Plain text
#: README_editable:234
msgid "Distributed Lisp and auxiliary files are stored entirely within the application package itself, avoiding the need to use a separate package manager to install Emacs updates.  These files are also loaded directly from the app package, and so do not require a time-consuming extraction procedure every time Emacs is updated before they can be used."
msgstr "Emacsのアップデートをインストールするために別個のパッケージマネージャーを使う必要がないように、Lispおよび補助的なファイルはすべてアプリのケージ自体に含めて配布される。これらのファイルはアプリのパッケージから直接ロードされるので使用前、Emacsがアップデートされるたびに毎回時間のかかる抽出手順を行う必要がない。"

#. type: Plain text
#: README_editable:237
msgid "This app is also capable of employing ported Unix software from Termux as well; see the top of this file, and moreover supports old Android releases before 7.0, which Termux does not."
msgstr "このアプリはTermuxのポート済みUnixソフトウェアを使うこともできる。このファイルの冒頭部分を参照のこと。さらにTermuxがサポートしていない7.0より前の古いAndroidリリースもサポートしている。"

#. type: Plain text
#: README_editable:240
#, no-wrap
msgid "18. What's the difference between the builds provided here and those     offered by F-Droid?\n"
msgstr "18. ここで提供しているビルド、F-Droid版のビルド、何が違うの?\n"

#. type: Plain text
#: README_editable:243
msgid "F-Droid's version is an old snapshot of the Android port from Februrary; although it has witnessed substantial improvement by comparison with the version from February they previously distributed, it remains incomplete and will always be absent bug fixes and new features present in the packages housed here."
msgstr "F-Droid版は2月のAndroidポートの古いスナップショットであり、その前の2月に配布されたバージョンと比較すると大幅に改善されてはいるものの、依然として不完全なままである。ここで提供しているパッケージには適用済みのバグフィックスや新機能は含まれていない。"

#. type: Plain text
#: README_editable:246
msgid "Their versions are also missing many of the dependencies packaged within the builds provided here: GnuTLS, image libraries, tree-sitter, and so on."
msgstr "GnuTLS、イメージ用のライブラリー、tree-sitterのようなここでパッケージして提供している多くの依存関係のビルドも含まれていないバージョンなのだ。"

#. type: Plain text
#: README_editable:249
#, no-wrap
msgid "19. Why can't I update from the F-Droid build to this one?\n"
msgstr "19. F-Droid版のビルドからここのビルドにアップデートできない、何で?\n"

#. type: Plain text
#: README_editable:252
msgid "Because Android requires package updates to be signed with the same key used to sign the existing installation, and F-Droid uses a signing key distinct from the one included in the Emacs repository."
msgstr "Androidでのアップデートで、既存のインストールで署名したのと同じキーで署名したパッケージが要求される。F-DroidはEmacsレポジトリに含まれている署名キーとは違う署名キーを使用しているからだ。"

#. type: Plain text
#: README_editable:255
msgid "Back up your configuration and uninstall the F-Droid build prior to installing any of the packages in this directory."
msgstr "設定をバックアップしたら、このディレクトリーにあるいずれかのパッケージをインストールする前にF-Droid版をアンインストールすればよい。"

#. type: Plain text
#: README_editable:258
#, no-wrap
msgid "20. ``Set Default Font'' in the Options menu does not list the     fonts I have installed.\n"
msgstr "20. Optionsメニューの`Set Default Font`で表示されるリストににインストール済みのフォントがない。\n"

#. type: Plain text
#: README_editable:261
msgid "That menu is in truth a vestige from the early days of Emacs's graphics support, when the only font ``backend'' was X, and programs could get away with listing merely the fonts common to most X servers. When invoked under Android, it produces a litany of fonts that are seldom really present on Android.  Fonts should be configured through Customize or the `set-frame-font' command instead."
msgstr "このメニューは実はフォントの\"バックエンド\"がXだけであった頃、プログラムはほとんどのXサーバーで共通なフォントを常にリストするだけでよかった、Emacsのグラフィカルサポート黎明期の名残りである。Androidで呼び出すと、Androidには実際にはほとんど存在しないフォントの長ったらしいリストが生成される。フォントはCustomizeか`set-frame-font`コマンドで構成する必要がある。"

#. type: Plain text
#: README_editable:264
#, no-wrap
msgid "21. Glyphs within Microsoft core fonts (Arial, Tahoma, and the like)     are misshapen or blurry.\n"
msgstr "21. Microsoftのコアフォント(Arial、Tahomaなど)のグリフ(glyph: 字形、字体)が崩れるぼやける。\n"

#. type: Plain text
#: README_editable:267
msgid "Antiquated versions of these fonts exploit extensions and implementation-specific behavior unique to the Microsoft Windows font scaler that Emacs does not supply, as a result of which various glyph programs they define go awry as they are executed to fit glyphs to the pixel grid.  The solution is to update them to their latest revisions, as distributed with recent releases of MS Windows."
msgstr "これらのフォントの旧バージョンは、Emacsが提供していないMicrosoft Windows固有のフォントスケーラーの拡張機能と実装固有の動作を利用している。このためにグリフをピクセルグリッドに適合させるために、これらのフォントが定義しているさまざまなグリフプログラムを実行しても上手く機能しないのだ。解決策はMS Windowsの最新リリースに同梱されているこれらのフォントの最新版にアップデートすること。"

#. type: Plain text
#: README_editable:270
msgid "In particular, such fonts expect the interpreter to grant them leave to address nonexistent glyph points.  The MS scaler ignores offending instructions, while Emacs terminates the program entirely."
msgstr "そのようなフォントは存在しないグリフポイントをアドレス指定する権限をインタープリターに期待する。MSスケーラーは無効な命令は無視するが、Emacsはプログラムを完全に終了する。"

#. type: Plain text
#: README_editable:273
#, no-wrap
msgid "22. Tool bar buttons are undersized.\n"
msgstr "22. ツールバーのボタンが小さい。\n"

#. type: Plain text
#: README_editable:276
msgid "Tool bar button margins do not increase to match the display density, which produces buttons that appear smaller than expected on high-density output devices, as featured by most Android phones today. Adjust the variable `tool-bar-button-margin' to compensate."
msgstr "ツールバーのボタンのマージン(余白)は画面解像度に合わせて拡大しない。今日ではほとんどのAndroidスマホに搭載されている高解像度出力デバイスでは、予想よりも小さく表示されるだろう。変数`tool-bar-button-margin`を調整して補正できる。"

#. type: Plain text
#: README_editable:279
#, no-wrap
msgid "23. B/W or grayscale displays are not detected, with the result that     colors applied by the likes of font-lock lack contrast.\n"
msgstr "23. モノクロあるいはグレースケールのディスプレイが検出されないすぃで、フォントロックなどが適用する色がコントラスト不足になる。\n"

#. type: Plain text
#: README_editable:282
msgid "This entry is relevant on tablets featuring \"digital paper\" displays, monochromatic or grayscale displays being virtually unknown elsewhere."
msgstr "これは\"電子ペーパーディスプレイ(digital paper display)\"以外ではほとんど知られていない、モノクロ/グレースケールのディスプレイを搭載するタブレットに関連する質問だ。"

#. type: Plain text
#: README_editable:285
msgid "Android not being designed for such applications, the display's visual class is not reported to programs, and consequently you the user are responsible for informing Emacs of the display color depth by means of the variable `android-display-depth'; for a grayscale display, the optimal value is anywhere between 2 and 8, where greater values correspond to more supported grays, while the proper value for a monochrome display is 1."
msgstr "そのようなアプリケーション向けにAndroidはデザインされていないので、ディスプレイのビジュアルクラスはそれをプログラムに報告しない。という訳で変数`android-display-depth`を使用してEmacsにディスプレイの色深度(color depth)を通知する役目はユーザーたるあなたが担うことになる。グレースケールに最適な値は2から8の間だろう。値が大きくなるほどサポートされるグレー値が多くなる。モノクロディスプレイの適切な値は1。"

#. type: Plain text
#: README_editable:288
msgid "Though this value controls color allocation choices, the display capabilities reported to Lisp, and by extension colors selected during the realization of faces, yet it does not affect font anti-aliasing or the display of images, as the underlying surface provided to Emacs is always color, with the driver converting anti-aliased text and color graphics into grayscale or monochrome data for the glass instead.  Its purpose is rather to enable users to activate the carefully curated palette for displays wanting in color space or depth."
msgstr "たとえこの値が色割り当ての選択がLispに報告されるディスプレイ機能、フェイスの実現中に選択される色を制御するとしても、Emacsに提供される基礎となるサーフェス(surface)は依然として色のままなので、フォントのアンチエイリアスやイメージ表示には効果がなく、かわりにドライバーがアンチエイリアスされたテキストやカラーグラフィックを、スクリーン向けにグレースケールやモノクロのデータに変換している。これはむしろ色空間や色深度を必要とするディスプレイ用に慎重に厳選したパレットを、ユーザーがアクティブにできるようにすることを意図した変数なのだ。"

#. type: Plain text
#: README_editable:291
#, no-wrap
msgid "24. How/where do I obtain the corresponding source code to which I am     entitled under the terms of the GNU GPL?\n"
msgstr "24. このアプリのGNU GPLの条件に基づく権利を有するソースコードはどこでどうやって入手できるの?\n"

#. type: Plain text
#: README_editable:294
msgid "Type:"
msgstr "Emacsで以下をタイプすればよい:"

#. type: Plain text
#: README_editable:297
#, no-wrap
msgid "  M-x describe-variable RET emacs-repository-version RET\n"
msgstr "  M-x describe-variable RET emacs-repository-version RET\n"

#. type: Plain text
#: README_editable:300
msgid "within Emacs.  Next, download that revision from the Emacs Git repository at:"
msgstr "そして以下のEmacsのGitレポジトリからそのリビジョンをダウンロードする:"

#. type: Plain text
#: README_editable:303
#, no-wrap
msgid "  https://git.savannah.gnu.org/git/emacs.git\n"
msgstr "  https://git.savannah.gnu.org/git/emacs.git\n"

#. type: Plain text
#: README_editable:306
msgid "I also retain source code tarballs produced from the repository for the binaries that are currently present on SourceForge.  Please contact me if you require those."
msgstr "このレポジトリから現在SourceForgeにあるバイナリ用に取得したソースコードのtarアーカイブは残してある。これが必要なら連絡して欲しい。"

#. type: Plain text
#: README_editable:309
#, no-wrap
msgid "25. Termux, its add-ons (or Emacs) won't install.\n"
msgstr "25. TermuxやTermuxのアドオン、(あるいはEmacs)がインストールされない。\n"

#. type: Plain text
#: README_editable:312
msgid "If you have downloaded and installed either the Termux-enabled Emacs, or Termux itself, from this site, installation of upstream Termux app packages will fail with a nondescript error message, as their signature will disagree with those of the packages already installed."
msgstr "このサイトからTermuxが有効なEmacsやTermux自体をダウンロードしてインストールしている場合には、アップストリームのTermuxのアプリパッケージのインストールは何の特徴もないエラーメッセージを表示して失敗するだろう。これはアプリパッケージの署名がインストール済みのパッケージの署名と一致しないからだ。"

#. type: Plain text
#: README_editable:315
msgid "You must either resign the packages you wish to install with the upstream Emacs signing key:"
msgstr "インストールするには以下のEmacsのアップストリームの署名キーでインストールしたいパッケージに再署名する:"

#. type: Plain text
#: README_editable:318
#, no-wrap
msgid "  https://git.savannah.gnu.org/cgit/emacs.git/tree/java/emacs.keystore\n"
msgstr "  https://git.savannah.gnu.org/cgit/emacs.git/tree/java/emacs.keystore\n"

#. type: Plain text
#: README_editable:321
msgid "or modify Android to disable its draconian signature verification, as with an XPosed module such as:"
msgstr "あるいは以下のようなXPosedモジュールでAndroidを変更して、厳格な署名検証を無効化しなければならない:"

#. type: Plain text
#: README_editable:324
#, no-wrap
msgid "  https://github.com/LSPosed/CorePatch\n"
msgstr "  https://github.com/LSPosed/CorePatch\n"

#. type: Plain text
#: README_editable:327
#, no-wrap
msgid "26. Something's missing from this FAQ!\n"
msgstr "26. このFAQには何かが足りない!\n"

#. type: Plain text
#: README_editable:330
msgid "If it's a subject not covered by the Android or Input nodes in the Emacs manual, or the relevant portions of the Lisp reference manual, please report a bug.  I will then update the manual and this FAQ as I see fit."
msgstr "EmacsマニュアルのAndroidやInputに関する章、あるいはLispリファレンスマニュアルの関連する部分でカバーされていない問題の場合には、どうかバグを報告して欲しい。必要と判断したらこのFAQとマニュアルを更新する。"
